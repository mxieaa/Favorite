{"version":3,"sources":["actions/index.js","reducers/index.js","utils.js","components/Question.js","components/Welcome.js","components/Histogram.js","components/three.js","components/ConvexHull.js","components/Legend.js","components/PreferenceSpace.js","components/Visuals.js","components/Stats.js","components/Interaction.js","components/Result.js","components/App.js","index.js","assets/imgs/logo-black.png","assets/imgs/favorite.png"],"names":["setActiveComponent","component","type","combineReducers","activeComponent","state","arguments","length","undefined","action","points","labels","attributes","candidates","mask","forEach","_ref","_ref2","Object","slicedToArray","attr","objectSpread","prunedPoints","indices","map","idx","step","concat","toConsumableArray","leftPoints","filter","indexOf","numLeftPoints","prev","mode","K","vertices","parsePoints","text","trim","split","slice","line","str","parseFloat","parseLabels","smallerBetter","candidatesVec","isSelected","getRanges","ranges","x","low","high","point","i","Math","min","max","loadDataset","asyncToGenerator","regenerator_default","a","mark","_callee","pointsURL","labelsURL","response","wrap","_context","next","fetch","sent","t0","t1","abrupt","t2","t3","stop","_x","_x2","apply","this","selectCandidates","maxPoints","val","isValid","j","push","array2Vector2D","array","vector","window","Module","VecVecDouble","arr","vec","VectorDouble","push_back","delete","vector2Array2D","size","get","vector2Array","array2Vector","getPrunedIndices","prevIndices","currIndices","prunedIndices","dominates","p1","p2","ver","key","at","getSkyline","dominated","m","index","sl","Array","pt","Welcome","upload","target","document","createElement","accept","click","onchange","e","console","log","path","files","reader","FileReader","readAsText","onload","points_attr","result","isNaN","item","rangesItem","alert","_this","props","setDataset","handleStart","attNum","values","_this$props$attribute","config","range","inputs","current","value","test","parseInt","includes","prompt","changeK","skyline","startAlgorithm","handleChange","event","changeMode","_this2","React","createRef","trs","_ref3","_ref4","disabled","react_default","className","onClick","toggleMask","style","cursor","textDecoration","placeholder","ref","checked","onChange","setState","background","padding","borderRadius","color","textAlign","maxWidth","alt","location","reload","src","imgURL","width","position","top","left","title","right","imgFavorite","Component","connect","_ref5","dispatch","setCandidates","defineProperty","Question","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","selectedPoint","runner","getIndices","d1","Date","Next_IncGreedy","d2","_performanceIndex","performanceIndex","y","getMrr","runtime","mrr","choose","option","convexHullVertices","readConvexHullVertices","updateConvexHull","getCandidatesIndices","questioNo","prunePoints","stopInteraction","nextPair","pair","showResult","inputDimension","D","floor","random","jsArray","n","NaN","some","globalBest_localBest","global_local_regret","globalBest","get_globalBestId","localBest","get_localBestId","regretRatio","get_regret_ratio","VectorInt","SevenAlgorithmRunner","DMM","cube","sphere","graphDP","biSearch","sweepDP","IncGreedy","pageResult","AlgorithmRunner","Random","Simplex","Parti","setLeftPoints","ths","tds","data-toggle","id","fontSize","borderBottom","display","justifyContent","margin","height","react_vis_es","onMouseLeave","hintValue","tickValues","tickFormat","toString","ticks","fill","includeMargin","xPercent","yPercent","transform","textAnchor","onNearestX","data","animation","toFixed","Histogram","_onMouseLeave","_onNearestX","num","THREE","require","SCALE","FACTOR","ConvexHull","drawGeometry","newVers","tmp","vertex","scaled_vertex","construct","Vector3","geometry","ConvexGeometry","material","MeshBasicMaterial","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","opacity","transparent","mesh","Mesh","geo","EdgesGeometry","mat","LineBasicMaterial","linewidth","wireframe","LineSegments","add","scene","addAxes","axes","AxesHelper","typeface","font","Font","PI","sqrt","_mesh$position","_mesh$rotation","rotation","shape","generateShapes","ShapeBufferGeometry","side","DoubleSide","set","lines","_line$position","_line$rotation","Geometry","Line","start","frameId","requestAnimationFrame","animate","cancelAnimationFrame","controls","update","renderer","render","camera","mount","clientWidth","clientHeight","Scene","PerspectiveCamera","up","OrbitControls","WebGLRenderer","antialias","setClearColor","setSize","appendChild","domElement","prevProps","remove","dispose","removeChild","alignItems","backgroundColor","SlideItem","Legend","settings","dots","infinite","speed","slidesToShow","slidesToScroll","vertical","verticalSwiping","arrows","swipeToSlide","afterChange","changeStartingIndex","verticalAlign","slider","slickPrev","index_es","icon","faAngleUp","lib_default","assign","self","slickNext","faAngleDown","PreferenceSpace","updateContextHullVertices","vertext","vert","components_ConvexHull","components_Legend","Visuals","minWidth","components_Histogram","components_PreferenceSpace","Stats","prunedTrs","leftTrs","classNames","table-fixed","components_Question","components_Visuals","components_Stats","restart","th","components_Welcome","components_Interaction","components_Result","onRuntimeInitialized","_onRuntimeInitialized","_yield$loadDataset","_yield$loadDataset2","store","createStore","rootReducer","es","components_App","getElementById","script","async","body","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.62d8114f.chunk.js","sourcesContent":["export const SET_ACTIVE_COMPONENT = \"SET_ACTIVE_COMPONENT\";\r\nexport const SET_CANDIDATES = \"SET_CANDIDATES\";\r\nexport const SET_DATASET = \"SET_DATASET\";\r\nexport const TOGGLE_MASK = \"TOGGLE_MASK\";\r\nexport const PRUNE_POINTS = \"PRUNE_POINTS\";\r\nexport const SET_LEFT_POINTS = \"SET_LEFT_POINTS\";\r\nexport const SET_MODE = \"SET_MODE\";\r\nexport const SET_K = \"SET_K\";\r\nexport const RESTART = \"RESTART\";\r\nexport const UPDATE_CONVEX_HULL = \"UPDATE_CONVEX_HULL\";\r\n\r\nexport const setActiveComponent = component => ({\r\n  type: SET_ACTIVE_COMPONENT,\r\n  component\r\n});\r\n\r\nexport const setCandidates = candidates => ({\r\n  type: SET_CANDIDATES,\r\n  candidates\r\n});\r\n\r\nexport const setDataset = (points, labels, attributes) => ({\r\n  type: SET_DATASET,\r\n  points,\r\n  labels,\r\n  attributes\r\n});\r\n\r\nexport const toggleMask = (attr, val) => ({\r\n  type: TOGGLE_MASK,\r\n  mask: { [attr]: val }\r\n});\r\n\r\nexport const prunePoints = (indices, step) => ({\r\n  type: PRUNE_POINTS,\r\n  indices,\r\n  step\r\n});\r\n\r\nexport const setLeftPoints = indices => ({\r\n  type: SET_LEFT_POINTS,\r\n  indices\r\n});\r\n\r\nexport const changeMode = mode => ({\r\n  type: SET_MODE,\r\n  mode\r\n});\r\n\r\nexport const changeK = K => ({\r\n  type: SET_K,\r\n  K\r\n});\r\n\r\nexport const restart = () => ({\r\n  type: RESTART\r\n});\r\n\r\nexport const updateConvexHull = vertices => ({\r\n  type: UPDATE_CONVEX_HULL,\r\n  vertices\r\n});\r\n","import { combineReducers } from \"redux\";\r\nimport {\r\n  SET_ACTIVE_COMPONENT,\r\n  SET_DATASET,\r\n  SET_CANDIDATES,\r\n  TOGGLE_MASK,\r\n  SET_LEFT_POINTS,\r\n  PRUNE_POINTS,\r\n  SET_MODE,\r\n  SET_K,\r\n  RESTART,\r\n  UPDATE_CONVEX_HULL\r\n} from \"../actions\";\r\n\r\nconst activeComponent = (state = \"Welcome\", action) => {\r\n  switch (action.type) {\r\n    case SET_ACTIVE_COMPONENT:\r\n      return action.component;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// all points in the dataset\r\nconst points = (state = null, action) => {\r\n  switch (action.type) {\r\n    case SET_DATASET:\r\n      return action.points;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// the labels of points\r\nconst labels = (state = null, action) => {\r\n  switch (action.type) {\r\n    // case SET_DATASET:\r\n    //   return action.labels;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// the attribute names\r\nconst attributes = (state = null, action) => {\r\n  switch (action.type) {\r\n    case SET_DATASET:\r\n      return action.attributes;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// the set of points in the specified ranges.\r\nconst candidates = (state = null, action) => {\r\n  switch (action.type) {\r\n    case SET_CANDIDATES:\r\n      return action.candidates;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// show/hide attributes (this feature is not exposed in the UI)\r\nconst mask = (state = null, action) => {\r\n  switch (action.type) {\r\n    case SET_DATASET:\r\n      const mask = {};\r\n      action.attributes.forEach(([attr, config]) => {\r\n        mask[attr] = 1;\r\n      });\r\n      return mask;\r\n    case TOGGLE_MASK:\r\n      return { ...state, ...action.mask };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// the set of points pruned.\r\n// it is an array of [idx, step no.]\r\nconst prunedPoints = (state = [], action) => {\r\n  switch (action.type) {\r\n    case RESTART:\r\n      return [];\r\n    case PRUNE_POINTS:\r\n      const points = action.indices.map(idx => [idx, action.step]);\r\n      return [...points, ...state];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// the set of candidate points\r\n// it is an array of indices\r\nconst leftPoints = (state = [], action) => {\r\n  switch (action.type) {\r\n    case RESTART:\r\n      return [];\r\n    case SET_LEFT_POINTS:\r\n      return action.indices;\r\n    case PRUNE_POINTS:\r\n      return state.filter(idx => action.indices.indexOf(idx) === -1);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// history of the number of left points\r\nconst numLeftPoints = (state = [], action) => {\r\n  switch (action.type) {\r\n    case SET_LEFT_POINTS:\r\n      return [action.indices.length];\r\n    case PRUNE_POINTS:\r\n      const prev = state[state.length - 1];\r\n      return [...state, prev - action.indices.length];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// the algorithm to select a pair of points.\r\nconst mode = (state = \"DMM\", action) => {\r\n  switch (action.type) {\r\n    case SET_MODE:\r\n      return action.mode;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n// the algorithm output K\r\nconst K = (state = 15, action) => {\r\n  switch (action.type) {\r\n    case SET_K:\r\n      return action.K;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\n// vertices of the convex hull of the preference space.\r\nconst vertices = (state = [], action) => {\r\n  switch (action.type) {\r\n    case UPDATE_CONVEX_HULL:\r\n      return action.vertices;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  activeComponent,\r\n  points,\r\n  labels,\r\n  attributes,\r\n  candidates,\r\n  mask,\r\n  prunedPoints,\r\n  leftPoints,\r\n  numLeftPoints,\r\n  mode,\r\n  K,\r\n  vertices\r\n});\r\n","// read points from a text file\nexport function parsePoints(text) {\n  const points = text\n    .trim()\n    .split(\"\\n\")\n    .slice(1) // the first line is <numOfPoints> <dimension>\n    .map(line =>\n      line\n        .trim()\n        .split(/\\s+/)\n        .map(str => parseFloat(str))\n    );\n  return points;\n}\n\n// read labels from a text file\nexport function parseLabels(text) {\n  const labels = text.trim().split(\"\\n\");\n  return labels;\n}\n\n// check if val is in the range [low, high].\nfunction isInRange(val, low, high) {\n  return low <= val && val <= high;\n}\n\n// get the range of each attribute in a set of points.\nexport const getRanges = points => {\n  const ranges = points[0].map(x => ({ low: x, high: x }));\n  points.slice(1).forEach(point => {\n    point.forEach((x, i) => {\n      ranges[i].low = Math.min(ranges[i].low, x);\n      ranges[i].high = Math.max(ranges[i].high, x);\n    });\n  });\n  return ranges;\n};\n\n// load a dataset by reading its points and labels.\nexport const loadDataset = async (pointsURL, labelsURL) => {\n  let response = await fetch(pointsURL);\n  const points = parsePoints(await response.text());\n  if (labelsURL === undefined) {\n    return points;\n  }\n  response = await fetch(labelsURL);\n  const labels = parseLabels(await response.text());\n  return [points, labels];\n};\n\n// get points that are in the specified ranges.\nexport const selectCandidates = (points, ranges, mask, maxPoints) => {\n  const candidates = [];\n  for (let i = 0; i < points.length; ++i) {\n    if (candidates.length >= maxPoints) break;\n    const point = points[i];\n    let isValid = true;\n    for (let j = 0; j < point.length; ++j) {\n      if (mask[j] && !isInRange(point[j], ranges[j][0], ranges[j][1])) {\n        isValid = false;\n        break;\n      }\n    }\n    if (isValid) candidates.push(point);\n  }\n  return candidates;\n};\n\n// convert a JS array to a C++ 2D vector\nexport const array2Vector2D = array => {\n  const vector = new window.Module.VecVecDouble();\n  array.forEach(arr => {\n    const vec = new window.Module.VectorDouble();\n    arr.forEach(x => vec.push_back(x));\n    vector.push_back(vec);\n    vec.delete();\n  });\n  return vector;\n};\n\n// convert a C++ 2D vector to a JS array\nexport const vector2Array2D = vector => {\n  const array = [];\n  for (let i = 0; i < vector.size(); ++i) {\n    const vec = vector.get(i);\n    const arr = [];\n    for (let j = 0; j < vec.size(); ++j) arr.push(vec.get(j));\n    array.push(arr);\n  }\n  return array;\n};\n\n// convert a C++ vector to a JS array\nexport const vector2Array = vector => {\n  const array = [];\n  for (let i = 0; i < vector.size(); ++i) {\n    array.push(vector.get(i));\n  }\n  return array;\n};\n\n// convert a JS array to a C++ vector\nexport const array2Vector = array => {\n  const vec = new window.Module.VectorDouble();\n  array.forEach(x => vec.push_back(x));\n  return vec;\n};\n\n\n\n// get the indices of points pruned.\n// both prevIndices and currIndices need to be sorted.\nexport const getPrunedIndices = (prevIndices, currIndices) => {\n  let prunedIndices = [];\n  for (let i = 0, j = 0; i < prevIndices.size() || j < currIndices.size();) {\n    if (j >= currIndices.size() || prevIndices.get(i) < currIndices.get(j)) {\n      prunedIndices.push(prevIndices.get(i));\n      ++i;\n    } else {\n      ++i;\n      ++j;\n    }\n  }\n  return prunedIndices;\n};\n\nconst dominates = (p1, p2) => {\n  let i;\n  p1.map((ver, key) => {\n    if (ver < p2.at(key)) return 0;\n  })\n  return 1;\n}\n\nexport const getSkyline = (points) => {\n  let i, j, dominated, index = 0, m;\n\n  let sl = new Array(points.length);\n\n  for (i =0; i < points.length; i++) {\n    \n    dominated = 0;\n    const pt = points.at(i).slice();\n\n    for (j = 0; j < index && ! dominated; ++j) {\n      if (dominates(points[sl[j]], pt))\n        dominated = 1;\n    }\n\n    if (!dominated) {\n      m = index;\n      index = 0;\n      for (j =0; j < m; j++) {\n        if (!dominates(pt, points[sl[j]])) {\n          sl[index++] = sl[j];\n        }\n      }\n      sl[index++] = i;\n    }\n  }\n  return index;\n}","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  setActiveComponent,\r\n  setLeftPoints,\r\n  prunePoints,\r\n  updateConvexHull\r\n} from \"../actions\";\r\nimport {\r\n  array2Vector2D,\r\n  array2Vector,\r\n  vector2Array,\r\n  getPrunedIndices,\r\n  vector2Array2D\r\n} from \"../utils\";\r\nimport {\r\n  FlexibleXYPlot,\r\n  XAxis,\r\n  YAxis,\r\n  Hint,\r\n  VerticalBarSeries,\r\n  ChartLabel\r\n} from \"react-vis\";\r\nvar smallerBetter, candidatesVec, isSelected;\r\n\r\n// iteratively ask the user to choose the preferred car from a pair of cars.\r\nclass Question extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    smallerBetter = new window.Module.VectorInt();\r\n    isSelected = new window.Module.VectorInt();\r\n    this.attributes = [];\r\n    this.props.attributes.forEach(([attr, config]) => {\r\n      console.log(this.props.mask[attr])\r\n      isSelected.push_back(this.props.mask[attr])\r\n      if (this.props.mask[attr]) {\r\n        smallerBetter.push_back(config.smallerBetter ? 1 : 0);\r\n        this.attributes.push(attr);\r\n      }\r\n    });\r\n    console.log(this.props.candidates)\r\n    candidatesVec = array2Vector2D(this.props.candidates);\r\n\r\n    // new algorithm\r\n    if (!['Random', 'Simplex', 'Parti'].includes(this.props.mode)) {\r\n      var d1 = new Date();\r\n      this.runner = new window.Module.SevenAlgorithmRunner(\r\n        candidatesVec,\r\n        smallerBetter,\r\n        isSelected,\r\n        { 'DMM': 4, 'cube': 5, 'sphere': 6, 'graphDP': 7, 'biSearch': 8, 'sweepDP': 9, 'IncGreedy': 10 }[this.props.mode],\r\n        this.props.K\r\n      );\r\n      var d2 = new Date();\r\n      this.state = {\r\n        performanceIndex: [{\r\n          x: 0,\r\n          y: this.runner.getMrr(),\r\n          runtime: d2 - d1,\r\n          mrr: this.runner.getMrr()\r\n        }]\r\n      }\r\n      console.log(this.runner)\r\n      candidatesVec.delete();\r\n      return this.pageResult = 'NewAlgorithm'\r\n    }\r\n\r\n    // old algorithm\r\n    this.runner = new window.Module.AlgorithmRunner(\r\n      candidatesVec,\r\n      smallerBetter,\r\n      isSelected,\r\n      { 'Random': 1, 'Simplex': 2, 'Parti': 3 }[this.props.mode]\r\n    );\r\n    console.log(this.runner)\r\n    candidatesVec.delete();\r\n    this.prevIndices = this.runner.getCandidatesIndices();\r\n    this.props.setLeftPoints(vector2Array(this.prevIndices));\r\n    if (this.prevIndices.size() < 2) {\r\n      this.state = { pair: [] };\r\n      this.stopInteraction();\r\n    } else {\r\n      const vec = window.Module.readConvexHullVertices();\r\n      const convexHullVertices = vector2Array2D(vec);\r\n      vec.delete();\r\n      console.log('create convexhullvertices:', convexHullVertices);\r\n      this.props.updateConvexHull(convexHullVertices);\r\n      const indices = this.runner.nextPair();\r\n      this.state = {\r\n        pair: vector2Array(indices)\r\n      };\r\n    }\r\n    return this.pageResult = 'OldAlgorithm'\r\n  }\r\n\r\n  next = () => {\r\n    const selectedPoint = vector2Array(this.runner.getIndices())\r\n    if (this.selectedPoint && this.selectedPoint.length === selectedPoint.length) return;\r\n    this.selectedPoint = selectedPoint\r\n    var d1 = new Date();\r\n    this.runner.Next_IncGreedy()\r\n    var d2 = new Date();\r\n    console.log(d2 - d1);\r\n    var _performanceIndex = this.state.performanceIndex\r\n    _performanceIndex.push({\r\n      x: _performanceIndex.length,\r\n      y: this.runner.getMrr(),\r\n      runtime: d2 - d1,\r\n      mrr: this.runner.getMrr()\r\n    })\r\n    this.setState({ performanceIndex: _performanceIndex })\r\n    // candidatesVec.delete();\r\n  }\r\n\r\n  choose = idx => {\r\n    const option = idx + 1;\r\n    this.runner.choose(option);\r\n    const convexHullVertices = vector2Array2D(\r\n      window.Module.readConvexHullVertices()\r\n    );\r\n    console.log('vertices to paint', convexHullVertices)\r\n    this.props.updateConvexHull(convexHullVertices);\r\n    const currIndices = this.runner.getCandidatesIndices();\r\n    const prunedIndices = getPrunedIndices(this.prevIndices, currIndices);\r\n    const questioNo = this.props.numLeftPoints.length;\r\n    this.props.prunePoints(prunedIndices, questioNo);\r\n    this.prevIndices.delete();\r\n    this.prevIndices = currIndices;\r\n    if (currIndices.size() < 2) {\r\n      this.stopInteraction();\r\n    } else {\r\n      const indices = this.runner.nextPair();\r\n      this.setState({\r\n        pair: vector2Array(indices)\r\n      });\r\n    }\r\n  };\r\n\r\n  stopInteraction = () => {\r\n    this.prevIndices.delete();\r\n    this.runner.delete();\r\n    this.props.showResult();\r\n  };\r\n\r\n\r\n  inputDimension = () => {\r\n    var D = prompt('Please input ' + this.attributes.length + ' dimensions. e.g: one integer value for each attribute. A larger value indicates that the corresponding attribute is more important. e.g.', this.attributes.map((i) =>  Math.floor(Math.random() * 10)))\r\n    if (!D) return\r\n    var jsArray = D.trim().split(',').map((n) => parseInt(n))\r\n    if (jsArray.includes(NaN) || jsArray.length !== this.attributes.length || jsArray.some((i) => i < 0)) return alert('Illegal number set!')\r\n    this.runner.globalBest_localBest(array2Vector(jsArray))\r\n    this.global_local_regret = { globalBest: this.props.candidates[this.runner.get_globalBestId()], localBest: this.props.candidates[this.runner.get_localBestId()], regretRatio: this.runner.get_regret_ratio() }\r\n    this.setState({ global_local_regret: this.global_local_regret })\r\n  }\r\n\r\n  render() {\r\n    if (this.pageResult === 'OldAlgorithm') {\r\n      const ths = [<th key=\"Option No.\">Option</th>];\r\n      this.attributes.forEach(attr => {\r\n        ths.push(<th key={attr}>{attr}</th>);\r\n      });\r\n      ths.push(<th key=\"chooseButton\" />);\r\n\r\n      const trs = this.state.pair.map((idx, i) => {\r\n        const tds = [<td key=\"Option No.\">{i + 1}</td>];\r\n        this.props.candidates[idx].forEach((x, j) => {\r\n          if (this.props.mask[this.props.attributes[j][0]]) {\r\n            tds.push(<td key={j}>{x}</td>);\r\n          }\r\n        });\r\n        tds.push(\r\n          <td key=\"chooseButton\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-outline-success btn-sm\"\r\n              onClick={() => this.choose(i)}\r\n            >\r\n              Choose\r\n            </button>\r\n          </td>\r\n        );\r\n        return (\r\n          <tr key={i} data-toggle=\"tooltip\" title={this.props.labels[idx]}>\r\n            {tds}\r\n          </tr>\r\n        );\r\n      });\r\n\r\n      return (\r\n        <div>\r\n          <h2 style={{ 'background': 'gainsboro', 'borderRadius': '5px', 'padding': '5px' }}>Your Choice</h2>\r\n          <h4>\r\n            Q{this.props.numLeftPoints.length}: Choose the Tuple You Favor More\r\n            among the Following Options\r\n          </h4>\r\n          <div className=\"row justify-content-center align-items-center\">\r\n            <div className=\"col-md-8\">\r\n              <table className=\"table table-hover text-center\">\r\n                <thead>\r\n                  <tr>{ths}</tr>\r\n                </thead>\r\n                <tbody>{trs}</tbody>\r\n              </table>\r\n            </div>\r\n            <div className=\"col-md-1\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-primary\"\r\n                onClick={this.stopInteraction}\r\n              >\r\n                Stop\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    // new algorithm\r\n    let ths = [<th key=\"Option No.\">Option ID</th>];\r\n    this.attributes.forEach(attr => {\r\n      ths.push(<th key={attr}>{attr}</th>)\r\n    });\r\n    const selectedPoint = vector2Array(this.runner.getIndices())\r\n    console.log(selectedPoint)\r\n    console.log(this.runner.getMrr())\r\n\r\n    const trs = selectedPoint.slice(-this.props.K).map((id, i) => {\r\n      const tds = [<td key=\"Option No.\">{id}</td>];\r\n      console.log(id)\r\n      if(id===-1) return\r\n      this.props.candidates[id].forEach((x, j) => {\r\n        if (this.props.mask[this.props.attributes[j][0]]) {\r\n          tds.push(<td key={j}>{x}</td>);\r\n        }\r\n      });\r\n      return (\r\n        <tr key={i} data-toggle=\"tooltip\" title={this.props.attributes[id]}>\r\n          {tds}\r\n        </tr>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div>\r\n        <br />\r\n        <div style={{ 'borderRadius': '5px', 'padding': '5px', 'fontSize': '22px' }}>\r\n          <span style={{ 'color': '#ff8737' }}>{this.props.mode}</span> selects at most k tuples for you\r\n        </div>\r\n        <br />\r\n        <table style={{ 'borderBottom': '1px solid gainsboro' }} className=\"table table-hover text-center\">\r\n          <thead>\r\n            <tr>{ths}</tr>\r\n          </thead>\r\n          <tbody>{trs}</tbody>\r\n        </table>\r\n        <div style={{ 'display': 'flex', 'justifyContent': 'space-between', 'padding': '0 10px', }}>\r\n          <div>\r\n            Output size: {selectedPoint.length}\r\n          </div>\r\n          <div onClick={this.inputDimension} style={{ 'background': '#ff8737', 'color': 'white', 'padding': '5px', 'borderRadius': '5px' }}>\r\n            Input D Dimensions\r\n          </div>\r\n        </div>\r\n        <br />\r\n\r\n        {this.props.mode === 'IncGreedy' ? (\r\n          <div>\r\n            <div style={{ 'margin': 'auto', width: \"30rem\", 'height': '28rem' }}>\r\n              <FlexibleXYPlot onMouseLeave={() => {\r\n                this.setState({ hintValue: null })\r\n              }}>\r\n                <XAxis\r\n                  tickValues={this.state.performanceIndex.map((val, idx) => idx)}\r\n                  tickFormat={value => value.toString()}\r\n                  style={{\r\n                    ticks: { fill: \"black\" }\r\n                  }}\r\n                />\r\n                <YAxis\r\n                  style={{\r\n                    ticks: { fill: \"black\" }\r\n                  }}\r\n                />\r\n                <ChartLabel\r\n                  text=\"Rounds\"\r\n                  includeMargin={false}\r\n                  xPercent={0.82}\r\n                  yPercent={1.06}\r\n                  style={{\r\n                    style: { fill: \"black\" }\r\n                  }}\r\n                />\r\n                <ChartLabel\r\n                  text=\"MRR(maximun regret ratio)\"\r\n                  includeMargin={false}\r\n                  xPercent={-0.01}\r\n                  yPercent={0.05}\r\n                  style={{\r\n                    transform: \"rotate(-90)\",\r\n                    textAnchor: \"end\",\r\n                    style: { fill: \"black\" }\r\n                  }}\r\n                />\r\n                <VerticalBarSeries\r\n                  color=\"#ff8737\"\r\n                  onNearestX={(value, { index }) => {\r\n                    this.setState({ hintValue: '' + index })\r\n                  }}\r\n                  data={this.state.performanceIndex}\r\n                  animation\r\n                />\r\n                {this.state.hintValue && (\r\n                  <Hint value={this.state.hintValue}>\r\n                    <p style={{ 'color': \"black\", 'textAlign': 'left' }}>\r\n                      Runtime: {this.state.performanceIndex[this.state.hintValue].runtime}ms<br />\r\n                      Mrr: {this.state.performanceIndex[this.state.hintValue].mrr.toFixed(4)}\r\n                    </p>\r\n                  </Hint>\r\n                )}\r\n              </FlexibleXYPlot>\r\n            </div>\r\n            <div style={{ 'background': '#ff8737', 'margin': 'auto', 'width': '100px', 'color': 'white', 'borderRadius': '3.25rem', 'padding': '5px' }} onClick={this.next}>Next</div>\r\n\r\n          </div>\r\n\r\n        ) : (\r\n          <div style={{ 'textAlign': 'left', 'padding': '8px', 'borderRadius': '5px', 'background': 'gainsboro' }}>\r\n            {this.props.mode} runtime: {this.state.performanceIndex[0].runtime} ms  <br /> MRR(maximun regret ratio): {this.state.performanceIndex[0].mrr}\r\n          </div>\r\n        )}\r\n        <br />\r\n        {this.global_local_regret ? (\r\n          <div style={{ 'background': '#ff8737', 'color': 'white', 'textAlign': 'left', 'borderRadius': '5px', 'padding': '8px' }}>\r\n\r\n            <div>Your global favorite tuple is:<br />\r\n              <table style={{ 'borderBottom': '1px solid gainsboro' }} className=\"table table-hover text-center\">\r\n                <thead>\r\n                  <tr>{ths}</tr>\r\n                </thead>\r\n                <tbody>{(() => {\r\n                  const tds = [<td key=\"Option No.\">{this.runner.get_globalBestId()}</td>];\r\n                  this.global_local_regret['globalBest'].forEach((x, j) => {\r\n                    if (this.props.mask[this.props.attributes[j][0]]) {\r\n                      tds.push(<td key={j}>{x}</td>);\r\n                    }\r\n                  })\r\n                  return tds\r\n                })()}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n\r\n            <div>Your local favorite tuple is:<br />\r\n              <table style={{ 'borderBottom': '1px solid gainsboro' }} className=\"table table-hover text-center\">\r\n                <thead>\r\n                  <tr>{ths}</tr>\r\n                </thead>\r\n                <tbody>{(() => {\r\n                  const tds = [<td key=\"Option No.\">{this.runner.get_localBestId()}</td>];\r\n                  this.global_local_regret['localBest'].forEach((x, j) => {\r\n                    if (this.props.mask[this.props.attributes[j][0]]) {\r\n                      tds.push(<td key={j}>{x}</td>);\r\n                    }\r\n                  })\r\n                  return tds\r\n                })()}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n\r\n            <div>Your regret ratio is: {this.global_local_regret['regretRatio']}</div>\r\n\r\n          </div>) : ''}\r\n        <br />\r\n        <button type=\"button\" className=\"btn btn-primary\" onClick={() => window.location.reload()}>\r\n          Return to Welcome\r\n        </button>\r\n        <br />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({\r\n  labels,\r\n  candidates,\r\n  mask,\r\n  attributes,\r\n  numLeftPoints,\r\n  mode,\r\n  K\r\n}) => ({\r\n  labels,\r\n  candidates,\r\n  mask,\r\n  attributes,\r\n  numLeftPoints,\r\n  mode,\r\n  K\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  showResult: () => {\r\n    dispatch(setActiveComponent(\"Result\"));\r\n  },\r\n  setLeftPoints: indices => {\r\n    dispatch(setLeftPoints(indices));\r\n  },\r\n  prunePoints: (indices, step) => {\r\n    dispatch(prunePoints(indices, step));\r\n  },\r\n  updateConvexHull: vertices => {\r\n    dispatch(updateConvexHull(vertices));\r\n  }\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Question);\r\n","import React from \"react\";\r\nimport {\r\n  setActiveComponent,\r\n  setCandidates,\r\n  toggleMask,\r\n  changeMode,\r\n  changeK,\r\n  setDataset\r\n} from \"../actions\";\r\nimport { connect } from \"react-redux\";\r\nimport { selectCandidates, getRanges, getSkyline } from \"../utils\";\r\nimport imgURL from '../assets/imgs/logo-black.png';\r\nimport imgFavorite from '../assets/imgs/favorite.png';\r\n\r\n// the welcome scene containing a brief introduction and a table to obtain the user's input\r\nclass Welcome extends React.Component {\r\n\r\n  upload = () => {\r\n    var target = document.createElement('input');\r\n    target.type = 'file';\r\n    target.accept = \".csv,text/plain\"\r\n    target.click()\r\n    target.onchange = (e) => {\r\n      console.log(e.path[0].files)\r\n      var reader = new FileReader();\r\n      reader.readAsText(e.path[0].files[0]);\r\n      reader.onload = () => {\r\n        const text = reader.result\r\n        // n k\r\n        // attributes.1 ... attributes.k\r\n        // 0.4534 ... 0.345(k)\r\n        var points_attr = text.trim().split(\"\\n\").slice(1)\r\n        // for points_attr, the first line is <numOfPoints> <dimension>\r\n        var points = points_attr.slice(1).map(line => line.trim().split(/\\s+/).map(str => isNaN(parseFloat(str)) ? 0 : parseFloat(str)));\r\n        console.log(points);\r\n        var ranges = getRanges(points)\r\n        console.log(ranges)\r\n        var attributes = points_attr[0].trim().split(/\\s+/).map((item, index) => {\r\n          let rangesItem = ranges[index]\r\n          rangesItem.smallerBetter = false\r\n          return [item, rangesItem]\r\n        })\r\n        console.log(attributes)\r\n        if (points.length < 5000) {\r\n          alert(\"please upload data more then 5000 rows!\");\r\n          return;\r\n        }\r\n        this.props.setDataset(points, '', attributes)\r\n      };\r\n    }\r\n  }\r\n\r\n  handleStart = () => {\r\n    let attNum = Object.values(this.props.mask).filter((i) => i === 1).length;\r\n    if (Object.values(this.props.mask).filter((i) => i === 1).length < 2) {\r\n      return alert('You should select at least two properties')\r\n    }\r\n    \r\n\r\n    const ranges = [];\r\n    const mask = [];\r\n    for (let i = 0; i < this.props.attributes.length; ++i) {\r\n      const [attr, config] = this.props.attributes[i];\r\n      const range = [config.low, config.high];\r\n      if (this.props.mask[attr]) {\r\n        for (let j = 0; j < 2; ++j) {\r\n          const str = this.inputs[attr][j].current.value.trim();\r\n          if (str === \"\") continue;\r\n          else if (isNaN(str)) {\r\n            alert(`${str} in range of ${attr} is not an integer`);\r\n            return;\r\n          } else {\r\n            range[j] = parseFloat(str);\r\n          }\r\n        }\r\n      }\r\n      ranges.push(range);\r\n      mask.push(this.props.mask[attr]);\r\n    }\r\n    let maxPoints;\r\n    const str = this.inputs.maxPoints.current.value.trim();\r\n    console.log('input number', str);\r\n    if (str === \"\") maxPoints = 5000;\r\n    else if (/\\d+/.test(str)) maxPoints = parseInt(str);\r\n    else if (maxPoints>50000 || maxPoints<5000) return alert('Too few valid tuples! Try more attributes, looser ranges, larger Max No. of Tuples or larger datasets!');\r\n    else {\r\n      alert(`${str} for Maximum items is not an integer`);\r\n      return;\r\n    }\r\n\r\n    if (maxPoints>50000 || maxPoints<5000) return alert('The input is out of the range, please input a number between 5000 ~ 50000');\r\n\r\n    if (!['Random', 'Simplex', 'Parti'].includes(this.props.mode)) {\r\n      var K = parseInt(prompt('Please input an integer more than ' + this.props.attributes.length))\r\n      if (!(/(^[1-9]\\d*$)/.test(K) && K >= this.props.attributes.length)) return alert('Illegal number!')\r\n      this.props.changeK(K)\r\n    } else {\r\n      if (attNum < 3) {\r\n        return alert('You should select at least two properties')\r\n      } else if (attNum > 5) {\r\n        return alert('You should not select more than five properties')\r\n      }\r\n    }\r\n\r\n    const candidates = selectCandidates(\r\n      this.props.points,\r\n      ranges,\r\n      mask,\r\n      maxPoints\r\n    );\r\n    if (candidates.length === 0) {\r\n      alert(\"No matching Tuples, try larger ranges\");\r\n      return;\r\n    }\r\n    console.log('input points', candidates);\r\n    let skyline = getSkyline(candidates)\r\n    console.log('input points', skyline);\r\n    this.props.startAlgorithm(candidates);\r\n  };\r\n\r\n  handleChange = event => {\r\n    if (['graphDP', 'biSearch', 'sweepDP'].includes(event.target.value)) {\r\n      console.log(this.props.mask)\r\n      if (Object.values(this.props.mask).filter((i) => i === 1).length > 2) {\r\n        alert(event.target.value + ' only supports 2D data!')\r\n        event.target.value = this.props.mode\r\n        return\r\n      }\r\n    }\r\n    console.log(event.target.value)\r\n    this.props.changeMode(event.target.value);\r\n  };\r\n\r\n  render() {\r\n    // Init inputs\r\n    this.inputs = {};\r\n    this.props.attributes.forEach(([attr, config]) => {\r\n      this.inputs[attr] = [React.createRef(), React.createRef()];\r\n    });\r\n    this.inputs.maxPoints = React.createRef();\r\n    // Iterate attributes\r\n    const trs = this.props.attributes.map(([attr, config], index) => {\r\n      const disabled = this.props.mask[attr] === 0;\r\n      const { low, high } = config;\r\n      return (\r\n        <tr key={attr}>\r\n          <td\r\n            className=\"align-middle\">\r\n            <span\r\n              onClick={() => this.props.toggleMask(attr, 1 - this.props.mask[attr])}\r\n              className={`${this.props.mask[attr] ? \"attribute-select\" : null}`}\r\n              style={{ 'cursor': 'pointer', 'textDecoration': this.props.mask[attr] ? '' : 'line-through' }}\r\n            >{attr}</span>\r\n          </td>\r\n          <td>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder={low}\r\n              ref={this.inputs[attr][0]}\r\n              disabled={disabled}\r\n            />\r\n          </td>\r\n          <td>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder={high}\r\n              ref={this.inputs[attr][1]}\r\n              disabled={disabled}\r\n            />\r\n          </td>\r\n          <td className=\"align-middle hidden\">\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={disabled}\r\n              onChange={() =>\r\n                this.props.toggleMask(attr, 1 - this.props.mask[attr])\r\n              }\r\n            />\r\n          </td>\r\n          <td className=\"align-middle\" onClick={() => { this.props.attributes[index][1].smallerBetter = !this.props.attributes[index][1].smallerBetter; this.setState({ attributes: this.props.attributes }) }}>\r\n            {this.props.attributes[index][1].smallerBetter ? <span style={{\r\n              'background': '#ff8737',\r\n              'padding': '5px',\r\n              'borderRadius': '5px',\r\n              'color': 'white'\r\n            }}>Yes</span> : <span>No</span>}\r\n          </td>\r\n        </tr>\r\n      );\r\n    });\r\n    trs.push(\r\n      <tr key=\"other\">\r\n        <td className=\"align-middle font-weight-bold\">Max No. of Tuples</td>\r\n        <td>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder='5000'\r\n            ref={this.inputs.maxPoints}\r\n          />\r\n        </td>\r\n        <td style={{ 'textAlign': 'left' }}>\r\n          {/* <div className=\"col form-inline align-items-center\"> */}\r\n          <label className=\"mr-4 col-form-label font-weight-bold\">Mode</label>\r\n          <div className=\"mr-3 form-check form-check-inline\">\r\n            <div>\r\n              <select onChange={this.handleChange}>\r\n                <option value=\"DMM\">DMM</option>\r\n                <option value=\"cube\">cube</option>\r\n                <option value=\"sphere\">sphere</option>\r\n                <option value=\"Simplex\">Simplex</option>\r\n                <option value=\"Random\">Random</option>\r\n                <option value=\"Random\">Parti</option>\r\n                <option value=\"graphDP\">graphDP</option>\r\n                <option value=\"biSearch\">biSearch</option>\r\n                <option value=\"sweepDP\">sweepDP</option>\r\n                <option value=\"IncGreedy\">IncGreedy</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    );\r\n    return (\r\n      <div className=\"text-center m-auto\" style={{ maxWidth: \"50rem\" }}>\r\n        <img alt='' onClick={() => window.location.reload()} src={imgURL} style={{ 'width': '50px', 'position': 'absolute', 'top': '15px', 'left': '15px', 'cursor': 'pointer' }} />\r\n        <div type=\"button\"\r\n          title=\"Format of Input file\r\n                ------------------------------------&#13;\r\n                The format of the first line is: n d\r\n                n - the number of tuples in the dataset, integer\r\n                d - dimensionality, integer\r\n                The format of the second line is:\r\n                <A1> <A2> ... <Ad>\r\n                Ai - the i-th attribute name, string\r\n                The format of the following n lines is\r\n                <dim 1> <dim 2> ... <dim d>.\r\n                Each line corresponds to a tuple.\"\r\n          className=\"btn btn-primary upload\"\r\n          style={{ position: 'absolute', top: '15px', right: '15px', width: \"8rem\" }}\r\n          onClick={this.upload}\r\n        >\r\n          Upload\r\n        </div>\r\n        <img alt='' src={imgFavorite} style={{ 'width': '400px' }} />\r\n        <br/>\r\n        <br/>\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th className=\"align-middle\">Attribute</th>\r\n              <th>Lower bound</th>\r\n              <th>Upper bound</th>\r\n              <th>Smaller better</th>\r\n              <th className=\"hidden\">Discard</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{trs}</tbody>\r\n        </table>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary\"\r\n            style={{ width: \"8rem\" }}\r\n            onClick={this.handleStart}\r\n          >\r\n            Start\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ attributes, mask, points, mode }) => ({\r\n  attributes,\r\n  mask,\r\n  points,\r\n  mode\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  startAlgorithm: candidates => {\r\n    dispatch(setCandidates(candidates));\r\n    dispatch(setActiveComponent(\"Interaction\"));\r\n  },\r\n  toggleMask: (attr, mask) => dispatch(toggleMask(attr, mask)),\r\n  changeMode: mode => dispatch(changeMode(mode)),\r\n  changeK: K => dispatch(changeK(K)),\r\n  setDataset: (points, labels, attributes) => dispatch(setDataset(points, labels, attributes))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Welcome);\r\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  FlexibleXYPlot,\n  XAxis,\n  YAxis,\n  Hint,\n  VerticalBarSeries,\n  ChartLabel\n} from \"react-vis\";\n\n// a histogram to show the number of tuples left vs the number of questions asked.\nclass Histogram extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hintValue: null\n    };\n  }\n\n  _onMouseLeave = () => {\n    this.setState({\n      hintValue: null\n    });\n  };\n\n  _onNearestX = (value, { index }) => {\n    this.setState({\n      hintValue: this.props.data[index]\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <h4>No. of Tuples Left vs. No. of Questions Asked</h4>\n        <div style={{ width: \"25rem\", height: \"25rem\" }}>\n          <FlexibleXYPlot onMouseLeave={this._onMouseLeave}>\n            <XAxis\n              tickValues={this.props.data.map((val, idx) => idx)}\n              tickFormat={value => value.toString()}\n              style={{\n                ticks: { fill: \"black\" }\n              }}\n            />\n            <YAxis\n              style={{\n                ticks: { fill: \"black\" }\n              }}\n            />\n            <ChartLabel\n              text=\"Question No.\"\n              includeMargin={false}\n              xPercent={0.82}\n              yPercent={1.06}\n              style={{\n                style: { fill: \"black\" }\n              }}\n            />\n            <ChartLabel\n              text=\"No. of Tuples Left\"\n              includeMargin={false}\n              xPercent={-0.01}\n              yPercent={0.05}\n              style={{\n                transform: \"rotate(-90)\",\n                textAnchor: \"end\",\n                style: { fill: \"black\" }\n              }}\n            />\n            <VerticalBarSeries\n              color=\"#ff8737\"\n              onNearestX={this._onNearestX}\n              data={this.props.data}\n              animation\n            />\n            {this.state.hintValue && (\n              <Hint value={this.state.hintValue}>\n                <p style={{ color: \"black\" }}>\n                  Q{this.state.hintValue.x}: {this.state.hintValue.y} Tuples Left\n                </p>\n              </Hint>\n            )}\n          </FlexibleXYPlot>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ numLeftPoints }) => ({\n  data: numLeftPoints.map((num, i) => ({ x: i, y: num }))\n});\n\nexport default connect(mapStateToProps)(Histogram);\n","import * as THREE from \"three\";\nwindow.THREE = THREE;\nrequire(\"three/examples/js/controls/OrbitControls\");\nrequire(\"three/examples/js/QuickHull\");\nrequire(\"three/examples/js/geometries/ConvexGeometry\");\n\nexport default THREE;\n","import React from \"react\";\nimport THREE from \"./three\";\n\nconst SCALE = 100;\nconst FACTOR = 10; // font size = SCALE / FACTOR\n\n// the convex hull of the preference space\nclass ConvexHull extends React.Component {\n  componentDidMount() {\n    const width = this.mount.clientWidth;\n    const height = this.mount.clientHeight;\n\n    this.scene = new THREE.Scene();\n\n    this.camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 1000);\n    this.camera.position.set(1.5 * SCALE, 1.5 * SCALE, 0.5 * SCALE);\n    this.camera.up.set(0, 0, 1);\n    this.controls = new THREE.OrbitControls(this.camera, this.mount);\n    this.controls.update();\n\n    this.renderer = new THREE.WebGLRenderer({ antialias: true });\n    this.renderer.setClearColor(0xffffff);\n    this.renderer.setSize(width, height);\n    this.mount.appendChild(this.renderer.domElement);\n    this.addAxes();\n    this.drawGeometry();\n    this.start();\n  }\n\n  drawGeometry = () => {\n    let newVers = this.props.vertices.map(x => x);\n    // if (newVers.length < 4) return;\n    if (newVers.length < 4) {\n      if (newVers.length == 3) {\n        const tmp = newVers.at(0);\n        newVers.push(tmp);\n      } else {\n        return;\n      }\n    }\n    // if (this.props.vertices.length < 4) {\n    //   if (this.props.vertices.length == 3) {\n    //     console.log('333-1', this.props.vertices);\n\n    //     let ver = this.props.vertices.at(0);\n    //     this.props.vertices.push(ver);\n    //     console.log('333-2', this.props.vertices);\n    //   }\n    //   if (this.props.vertices.length == 2) {\n    //     console.log('222-1', this.props.vertices);\n\n    //     let ver = this.props.vertices.at(0);\n    //     this.props.vertices.push(ver);\n    //     this.props.vertices.push(ver);\n    //     console.log('222-2', this.props.vertices);\n    //   } else {\n    //       return;\n    //   }\n    // }\n    // if (this.props.vertices.length < 4) return;\n    const points = newVers.map(vertex => {\n      const scaled_vertex = vertex.map(x => x * SCALE);\n      return new THREE.Vector3(...scaled_vertex);\n    });\n    console.log(points, 'points to paint');\n    const geometry = new THREE.ConvexGeometry(points);\n    const material = new THREE.MeshBasicMaterial({\n      color: 0x87CEEB,\n      //shading: THREE.FlatShading,\n      polygonOffset: true,\n      polygonOffsetFactor: 1, // positive value pushes polygon further away\n      polygonOffsetUnits: 1,\n      opacity: 0.75,\n      transparent: true\n    });\n    this.mesh = new THREE.Mesh(geometry, material);\n    const geo = new THREE.EdgesGeometry(geometry); // or WireframeGeometry\n    const mat = new THREE.LineBasicMaterial({ color: 0x000000, linewidth: 2 });\n    const wireframe = new THREE.LineSegments(geo, mat);\n    this.mesh.add(wireframe);\n    this.scene.add(this.mesh);\n  };\n\n  addAxes = () => {\n    const axes = new THREE.AxesHelper(1.5 * SCALE);\n    this.scene.add(axes);\n    const typeface = require(\"three/examples/fonts/helvetiker_regular.typeface.json\");\n    const font = new THREE.Font(typeface);\n\n    const numConfig = [\n      // color, position, rotation\n      [\n        0xff0000,\n        [SCALE + SCALE / (FACTOR * 2), 0, 0],\n        [Math.PI / 2, Math.PI, 0]\n      ],\n      [\n        0x00ff00,\n        [0, SCALE - SCALE / (FACTOR * 2), 0],\n        [Math.PI / 2, Math.PI / 2, 0]\n      ],\n      [\n        0x0000ff,\n        [\n          SCALE / (FACTOR * Math.sqrt(2)),\n          -SCALE / (FACTOR * Math.sqrt(2)),\n          SCALE\n        ],\n        [Math.PI / 2, (Math.PI * 3) / 4, 0]\n      ]\n    ];\n\n    numConfig.forEach(([color, position, rotation]) => {\n      const shape = font.generateShapes(\"1\", SCALE / FACTOR);\n      const geometry = new THREE.ShapeBufferGeometry(shape);\n      const mesh = new THREE.Mesh(\n        geometry,\n        new THREE.MeshBasicMaterial({\n          color: color,\n          side: THREE.DoubleSide\n        })\n      );\n      mesh.position.set(...position);\n      mesh.rotation.set(...rotation);\n      this.scene.add(mesh);\n    });\n    window.lines = [];\n    const lineConfig = [\n      [0xff0000, [SCALE, 0, 0], [0, 0, 0]],\n      [0x00ff00, [0, SCALE, 0], [0, 0, -Math.PI / 2]],\n      [0x0000ff, [0, 0, SCALE], [0, 0, -Math.PI / 2]]\n    ];\n    lineConfig.forEach(([color, position, rotation]) => {\n      const material = new THREE.LineBasicMaterial({\n        color\n      });\n      const geometry = new THREE.Geometry();\n      geometry.vertices.push(\n        new THREE.Vector3(0, 0, 0),\n        new THREE.Vector3(0, SCALE / (2 * FACTOR))\n      );\n      const line = new THREE.Line(geometry, material);\n      line.position.set(...position);\n      line.rotation.set(...rotation);\n      this.scene.add(line);\n      window.lines.push(line);\n    });\n  };\n\n  componentDidUpdate(prevProps) {\n    if (this.props.vertices !== prevProps.vertices) {\n      if (this.mesh) {\n        this.scene.remove(this.mesh);\n        this.mesh.geometry.dispose();\n        this.mesh.material.dispose();\n      }\n      this.drawGeometry();\n    }\n  }\n\n  componentWillUnmount() {\n    this.stop();\n    this.mount.removeChild(this.renderer.domElement);\n  }\n\n  start = () => {\n    if (!this.frameId) {\n      this.frameId = window.requestAnimationFrame(this.animate);\n    }\n  };\n\n  stop = () => {\n    window.cancelAnimationFrame(this.frameId);\n  };\n\n  animate = () => {\n    this.controls.update();\n    this.renderer.render(this.scene, this.camera);\n    this.frameId = window.requestAnimationFrame(this.animate);\n  };\n\n  render() {\n    return (\n      <div\n        style={{ width: \"25rem\", height: \"25rem\" }}\n        ref={mount => {\n          this.mount = mount;\n        }}\n      />\n    );\n  }\n}\n\nexport default ConvexHull;\n","import React from \"react\";\nimport Slider from \"react-slick\";\nimport { connect } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleUp, faAngleDown } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction Line({ color }) {\n  return (\n    <div\n      style={{\n        width: \"100%\",\n        height: \"2rem\",\n        alignItems: \"center\",\n        display: \"flex\"\n      }}\n    >\n      <div style={{ width: \"100%\", height: \"2px\", backgroundColor: color }} />\n    </div>\n  );\n}\n\nfunction SlideItem({ text }) {\n  return (\n    <div\n      style={{\n        height: \"2rem\",\n        alignItems: \"center\",\n        display: \"flex\",\n        justifyContent: \"center\"\n      }}\n    >\n      {text}\n    </div>\n  );\n}\n\n// show/change the selected attributes for displaying the convex hull\nclass Legend extends React.Component {\n  constructor(props) {\n    super(props);\n    this.attributes = [];\n    //console.log('legend', this.props.mask, this.props.attributes);\n    this.props.attributes.forEach(([attr]) => {\n      if (this.props.mask[attr]) this.attributes.push(attr);\n    });\n  }\n  render() {\n    const settings = {\n      dots: false,\n      infinite: true,\n      speed: 500,\n      slidesToShow: this.attributes.length-1,\n      slidesToScroll: 1,\n      vertical: true,\n      verticalSwiping: true,\n      arrows: false,\n      swipeToSlide: true,\n      afterChange: this.props.changeStartingIndex\n    };\n    return (\n      <div\n        title=\"Click the arrows to change the selected attributes for displaying the convex hull.\"\n        style={{\n          width: \"12rem\"\n        }}\n      >\n        <div\n          style={{\n            alignItems: \"center\",\n            width: \"4rem\",\n            display: \"inline-block\",\n            verticalAlign: \"middle\"\n          }}\n        >\n          <Line color=\"#ff0000\" />\n          <Line color=\"#00ff00\" />\n          <Line color=\"#0000ff\" />\n        </div>\n        <div\n          style={{\n            width: \"8rem\",\n            display: \"inline-block\",\n            verticalAlign: \"middle\"\n          }}\n        >\n          <div\n            onClick={() => this.slider.slickPrev()}\n            style={{ cursor: \"pointer\" }}\n          >\n            <FontAwesomeIcon icon={faAngleUp} />\n          </div>\n          <Slider {...settings} ref={self => (this.slider = self)}>\n            {this.attributes.map((attr, key) => (<SlideItem key={key} text={attr}/>))}\n          </Slider>\n          <div\n            onClick={() => this.slider.slickNext()}\n            style={{ cursor: \"pointer\" }}\n          >\n            <FontAwesomeIcon icon={faAngleDown} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ mask, attributes }) => ({\n  mask,\n  attributes\n});\n\nexport default connect(mapStateToProps)(Legend);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport ConvexHull from \"./ConvexHull\";\nimport Legend from \"./Legend\";\n\n// to visualize the preference space.\nclass PreferenceSpace extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      index: 0,\n      convexHullVertices: props.vertices.map(vert => vert.slice(0, 3))\n    };\n  }\n\n  updateContextHullVertices = index => {\n    const convexHullVertices = this.props.vertices.map(vertext => {\n      const vert = [];\n      for (let i = 0; i < 3; ++i) {\n        vert.push(vertext[(i + index) % 4]);\n      }\n      return vert;\n    });\n    this.setState({ convexHullVertices });\n  };\n\n  componentDidUpdate(prevProps) {\n    if (this.props.vertices !== prevProps.vertices) {\n      this.updateContextHullVertices(this.state.index);\n    }\n  }\n\n  changeStartingIndex = index => {\n    this.setState({ index });\n    // explicitly pass index to this.updateContextHullVertices\n    // because this.state.index is not updated immediately,\n    // i.e., this.state.index has still the old value at this line.\n    this.updateContextHullVertices(index);\n  };\n\n  render() {\n    console.log('vertices', this.state.convexHullVertices);\n    return (\n      <div>\n        <h4>Convex Hull of Preference Space</h4>\n        <ConvexHull vertices={this.state.convexHullVertices} />\n        <div style={{ position: \"absolute\", top: \"2rem\", left: \"20rem\" }}>\n          <Legend changeStartingIndex={this.changeStartingIndex} />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ vertices }) => ({ vertices });\n\nexport default connect(mapStateToProps)(PreferenceSpace);\n","import React from \"react\";\nimport Histogram from \"./Histogram\";\nimport PreferenceSpace from \"./PreferenceSpace\";\n\nfunction Visuals() {\n  return (\n    <div>\n      <h2 style={{'background':'gainsboro','borderRadius':'5px','padding':'5px'}}>Visuals</h2>\n      <div className=\"row justify-content-center\">\n        <div className=\"col-6\" style={{ minWidth: \"500px\" }}>\n          <Histogram />\n        </div>\n        <div className=\"col-6\" style={{ minWidth: \"500px\" }}>\n          <PreferenceSpace />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Visuals;\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport classNames from \"classnames\";\r\n\r\n// statistics including the number of cars pruned/left.\r\nclass Stats extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.attributes = [];\r\n    this.props.attributes.forEach(([attr, config]) => {\r\n      if (this.props.mask[attr]) {\r\n        this.attributes.push(attr);\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let ths = [<th key=\"Step No.\">Step</th>];\r\n    this.attributes.forEach(attr => {\r\n      ths.push(<th key={attr}>{attr}</th>);\r\n    });\r\n    const prunedTrs = this.props.prunedPoints.map(([idx, step], i) => (\r\n      <tr key={i} data-toggle=\"tooltip\" title={this.props.labels[idx]}>\r\n        {[<td>{step}</td>].concat(this.props.candidates[idx].map((x, j) => {\r\n          if (this.props.mask[this.props.attributes[j][0]]) {\r\n            return <td key={j}>{x}</td>\r\n          }\r\n        }\r\n        ))}\r\n      </tr>\r\n    ));\r\n    const leftTrs = this.props.leftPoints.map((idx, i) => (\r\n      <tr key={i} data-toggle=\"tooltip\" title={this.props.labels[idx]}>\r\n        {this.props.candidates[idx].map((x, j) => {\r\n          if (this.props.mask[this.props.attributes[j][0]]) {\r\n            return <td key={j}>{x}</td>\r\n          }\r\n        })}\r\n      </tr>\r\n    ));\r\n    return (\r\n      <div>\r\n        <h2 style={{ 'background': 'gainsboro', 'borderRadius': '5px', 'padding': '5px' }}>Statistics</h2>\r\n        <div className=\"row\">\r\n          <div className=\"col\">\r\n            <h4>The No. of Tuples Pruned: {this.props.prunedPoints.length}</h4>\r\n            <table\r\n              className={classNames(\"table\", \"table-hover\", {\r\n                \"table-fixed\": prunedTrs.length > 7\r\n              })}\r\n              style={{\r\n                minWidth: \"37rem\"\r\n              }}\r\n            >\r\n              <thead>\r\n                <tr>{ths}</tr>\r\n              </thead>\r\n              <tbody>{prunedTrs}</tbody>\r\n            </table>\r\n          </div>\r\n          <div className=\"col\">\r\n            <h4>\r\n              The No. of Tuples Left in the Database:{\" \"}\r\n              {this.props.leftPoints.length}\r\n            </h4>\r\n            <table\r\n              className={classNames(\"table\", \"table-hover\", {\r\n                \"table-fixed\": leftTrs.length > 7\r\n              })}\r\n              style={{\r\n                minWidth: \"30rem\"\r\n              }}\r\n            >\r\n              <thead>\r\n                <tr>{ths.slice(1)}</tr>\r\n              </thead>\r\n              <tbody>{leftTrs}</tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToPropsStats = ({\r\n  labels,\r\n  candidates,\r\n  prunedPoints,\r\n  leftPoints,\r\n  attributes,\r\n  mask\r\n}) => ({\r\n  labels,\r\n  candidates,\r\n  prunedPoints,\r\n  leftPoints,\r\n  attributes,\r\n  mask\r\n});\r\n\r\nexport default connect(mapStateToPropsStats)(Stats);\r\n","import React from \"react\";\nimport Question from \"./Question\";\nimport Visuals from \"./Visuals\";\nimport Stats from \"./Stats\";\nimport { connect } from \"react-redux\";\nimport imgURL from '../assets/imgs/logo-black.png';\nfunction Interaction({ mode }) {\n  if (['Random', 'Simplex', 'Parti'].includes(mode)) {\n    return (\n      <div>\n        <Question />\n        <Visuals />\n        <Stats />\n      </div>\n    );\n  } else {\n    return (\n      <div>\n        <img alt='' onClick={() => window.location.reload()} src={imgURL} style={{ 'width': '50px', 'position': 'absolute', 'top': '15px', 'left': '15px', 'cursor': 'pointer' }} />\n        <Question />\n      </div>\n    )\n  }\n}\nconst mapStateToProps = ({ mode }) => ({\n  mode\n});\nexport default connect(mapStateToProps)(Interaction);\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport classNames from \"classnames\";\r\nimport { setActiveComponent, restart } from \"../actions\";\r\nimport Histogram from \"./Histogram\";\r\n\r\n// show the number of questions asked and the favourite car/remaining cars.\r\nfunction Result({\r\n  labels,\r\n  candidates,\r\n  leftPoints,\r\n  attributes,\r\n  mask,\r\n  numLeftPoints,\r\n  restart\r\n}) {\r\n  let ths = [];\r\n  attributes.forEach(([attr, config]) => {\r\n    if (mask[attr]) {\r\n      const th = <th key={attr}>{attr}</th>;\r\n      ths.push(th);\r\n    }\r\n  });\r\n  const trs = leftPoints.map((idx, i) => (\r\n    <tr key={i} data-toggle=\"tooltip\" title={labels[idx]}>\r\n      {candidates[idx].map((x, j) => {\r\n        if (mask[attributes[j][0]]) {\r\n          return <td key={j}>{x}</td>\r\n        }\r\n      })}\r\n    </tr>\r\n  ));\r\n  return (\r\n    <div className=\"justify-content-center\">\r\n      <h4>The Total No. of Questions Asked is: {numLeftPoints.length - 1}.</h4>\r\n      <h4>\r\n        {leftPoints.length === 1\r\n          ? \"Your Favourite Tuple is:\"\r\n          : `${leftPoints.length} Tuples Left in the Database:`}\r\n      </h4>\r\n      <table\r\n        className={classNames(\"table\", \"table-hover\", {\r\n          \"table-fixed\": trs.length > 7\r\n        })}\r\n        style={{\r\n          maxWidth: \"40rem\",\r\n          margin: \"auto\"\r\n        }}\r\n      >\r\n        <thead>\r\n          <tr>{ths}</tr>\r\n        </thead>\r\n        <tbody>{trs}</tbody>\r\n      </table>\r\n      <div className=\"d-flex justify-content-center my-3\">\r\n        <Histogram />\r\n      </div>\r\n      <div>\r\n        <button type=\"button\" className=\"btn btn-primary\" onClick={restart}>\r\n          Return to Welcome\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = ({\r\n  labels,\r\n  candidates,\r\n  leftPoints,\r\n  attributes,\r\n  mask,\r\n  numLeftPoints\r\n}) => ({\r\n  labels,\r\n  candidates,\r\n  leftPoints,\r\n  attributes,\r\n  mask,\r\n  numLeftPoints\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  restart: () => {\r\n    dispatch(setActiveComponent(\"Welcome\"));\r\n    dispatch(restart());\r\n  }\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Result);\r\n","import React from \"react\";\r\nimport Welcome from \"./Welcome\";\r\nimport Interaction from \"./Interaction\";\r\nimport Result from \"./Result\";\r\nimport { connect } from \"react-redux\";\r\n// import imgURL from '../assets/imgs/logo-black.png';\r\n// import imgFavorite from '../assets/imgs/favorite.png';\r\n// import { getRanges } from \"../utils\";\r\n\r\n\r\nfunction App({ activeComponent }) {\r\n  // var upload = () => {\r\n  //   var target = document.createElement('input');\r\n  //   target.type = 'file';\r\n  //   target.accept = \".csv,text/plain\"\r\n  //   target.click()\r\n  //   target.onchange = (e) => {\r\n  //     console.log(e.path[0].files)\r\n  //     var reader = new FileReader();\r\n  //     reader.readAsText(e.path[0].files[0]);\r\n  //     reader.onload = () => {\r\n  //       const text = reader.result\r\n  //       // n k\r\n  //       // attributes.1 ... attributes.k\r\n  //       // 0.4534 ... 0.345(k)\r\n  //       var points_attr = text.trim().split(\"\\n\").slice(1)\r\n  //       // the first line is <numOfPoints> <dimension>\r\n  //       var points = points_attr.slice(1).map(line => line.trim().split(/\\s+/).map(str => parseFloat(str)));\r\n  //       var ranges = getRanges(points)\r\n  //       var attributes = points_attr[0].trim().split(/\\s+/).map((item, index) => {\r\n  //         let rangesItem = ranges[index]\r\n  //         rangesItem.smallerBetter = false\r\n  //         return [item, rangesItem]\r\n  //       })\r\n  //       console.log(attributes)\r\n  //       this.props.setDataset(points, '', attributes)\r\n  //     };\r\n  //   }\r\n  // }\r\n  switch (activeComponent) {\r\n  //   case \"Home\":\r\n  //     return <div>\r\n  //       <img alt='' onClick={() => window.location.reload()} src={imgURL} style={{ 'width': '50px', 'position': 'absolute', 'top': '15px', 'left': '15px', 'cursor': 'pointer' }} />\r\n  //       <img alt='' src={imgFavorite} style={{ 'width': '400px' }} />\r\n  //       <div>\r\n  //         <div type=\"button\"\r\n  //           className=\"btn btn-primary\"\r\n  //           style={{ width: \"8rem\" }}\r\n  //           onClick={upload}\r\n  //         >\r\n  //           Upload\r\n  //         </div>\r\n  //         <div style={{'width': '100px','display':'inline-block'}}></div>\r\n  //         <div type=\"button\"\r\n  //           className=\"btn btn-primary\"\r\n  //           style={{ width: \"8rem\" }}\r\n  //           onClick={()=>activeComponent= 'Welcome'}\r\n\r\n  //         >\r\n  //           Sample\r\n  //         </div>\r\n  //       </div>\r\n\r\n  //     </div>\r\n    case \"Welcome\":\r\n      return <Welcome />;\r\n    case \"Interaction\":\r\n      return <Interaction />;\r\n    case \"Result\":\r\n      return <Result />;\r\n    default:\r\n      return <div />;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ activeComponent }) => ({\r\n  activeComponent\r\n});\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","import { createStore } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\nimport React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport App from \"./components/App\";\r\nimport { loadDataset } from \"./utils\";\r\n\r\nwindow.Module = {\r\n  onRuntimeInitialized: async function() {\r\n    const [points, labels] = await loadDataset(\r\n      \"./datasets/cars.txt\",\r\n      \"./datasets/labelsOfCars.txt\"\r\n    );\r\n    const attributes = [\r\n      [\"Price (USD)\", { low: 1000, high: 50000, smallerBetter: true }],\r\n      [\"Year\", { low: 2001, high: 2017, smallerBetter: false }],\r\n      [\"Power (HP)\", { low: 50, high: 400, smallerBetter: false }],\r\n      [\"Used KM\", { low: 10000, high: 150000, smallerBetter: true }]\r\n    ];\r\n    const mask = {};\r\n    attributes.forEach(([attr, config],index) => {\r\n      mask[attr] = 1;\r\n    });\r\n    console.log(mask)\r\n\r\n    const store = createStore(\r\n      rootReducer,\r\n      { points, labels, attributes, mask }\r\n      // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    );\r\n    render(\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>,\r\n      document.getElementById(\"root\")\r\n    );\r\n  }\r\n};\r\n\r\nconst script = document.createElement(\"script\");\r\nscript.src = \"web.js\";\r\nscript.async = true;\r\ndocument.body.appendChild(script);\r\n","module.exports = __webpack_public_path__ + \"static/media/logo-black.4a289cfe.png\";","module.exports = __webpack_public_path__ + \"static/media/favorite.39847071.png\";"],"sourceRoot":""}