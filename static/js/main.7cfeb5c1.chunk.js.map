{"version":3,"sources":["actions/index.js","reducers/index.js","utils.js","components/Question.js","components/Welcome.js","components/Histogram.js","components/three.js","components/ConvexHull.js","components/Legend.js","components/PreferenceSpace.js","components/Visuals.js","components/Stats.js","components/Interaction.js","components/Result.js","components/App.js","index.js","assets/imgs/logo-black.png","assets/imgs/favorite.png"],"names":["setActiveComponent","component","type","combineReducers","activeComponent","state","arguments","length","undefined","action","points","labels","attributes","candidates","mask","forEach","_ref","_ref2","Object","slicedToArray","attr","objectSpread","prunedPoints","indices","map","idx","step","concat","toConsumableArray","leftPoints","filter","indexOf","numLeftPoints","prev","mode","K","vertices","parsePoints","text","trim","split","slice","line","str","parseFloat","parseLabels","smallerBetter","candidatesVec","isSelected","getRanges","ranges","x","low","high","point","i","Math","min","max","loadDataset","asyncToGenerator","regenerator_default","a","mark","_callee","pointsURL","labelsURL","response","wrap","_context","next","fetch","sent","t0","t1","abrupt","t2","t3","stop","_x","_x2","apply","this","selectCandidates","maxPoints","val","isValid","j","push","array2Vector2D","array","vector","window","Module","VecVecDouble","arr","vec","VectorDouble","push_back","delete","vector2Array2D","size","get","vector2Array","array2Vector","getPrunedIndices","prevIndices","currIndices","prunedIndices","dominates","p1","p2","at","getSkyline","dominated","m","index","console","log","sl","Array","pt","Welcome","upload","target","document","createElement","accept","click","onchange","e","path","files","reader","FileReader","readAsText","onload","points_attr","result","isNaN","item","rangesItem","alert","_this","props","setDataset","handleStart","attNum","values","_this$props$attribute","config","range","inputs","current","value","test","parseInt","includes","prompt","changeK","_ref3","_ref4","skyline","startAlgorithm","handleChange","event","changeMode","_this2","_ref5","_ref6","React","createRef","trs","_ref7","_ref8","disabled","react_default","key","className","onClick","toggleMask","style","cursor","textDecoration","placeholder","ref","checked","onChange","setState","background","padding","borderRadius","color","textAlign","maxWidth","alt","location","reload","src","imgURL","width","position","top","left","title","right","imgFavorite","Component","connect","_ref9","dispatch","setCandidates","defineProperty","Question","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","selectedPoint","runner","getIndices","d1","Date","Next_IncGreedy","d2","_performanceIndex","performanceIndex","y","getMrr","runtime","mrr","choose","option","convexHullVertices","readConvexHullVertices","updateConvexHull","getCandidatesIndices","questioNo","prunePoints","stopInteraction","nextPair","pair","showResult","inputDimension","D","floor","random","jsArray","n","NaN","some","globalBest_localBest","global_local_regret","globalBest","get_globalBestId","localBest","get_localBestId","regretRatio","get_regret_ratio","VectorInt","SevenAlgorithmRunner","DMM","cube","sphere","graphDP","biSearch","sweepDP","IncGreedy","pageResult","AlgorithmRunner","Random","Simplex","Parti","setLeftPoints","ths","tds","data-toggle","id","fontSize","borderBottom","display","justifyContent","margin","height","react_vis_es","onMouseLeave","hintValue","tickValues","tickFormat","toString","ticks","fill","includeMargin","xPercent","yPercent","transform","textAnchor","onNearestX","data","animation","toFixed","Histogram","_onMouseLeave","_onNearestX","num","THREE","require","SCALE","FACTOR","ConvexHull","drawGeometry","newVers","tmp","vertex","scaled_vertex","construct","Vector3","geometry","ConvexGeometry","material","MeshBasicMaterial","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","opacity","transparent","mesh","Mesh","geo","EdgesGeometry","mat","LineBasicMaterial","linewidth","wireframe","LineSegments","add","scene","addAxes","axes","AxesHelper","typeface","font","Font","PI","sqrt","_mesh$position","_mesh$rotation","rotation","shape","generateShapes","ShapeBufferGeometry","side","DoubleSide","set","lines","_line$position","_line$rotation","Geometry","Line","start","frameId","requestAnimationFrame","animate","cancelAnimationFrame","controls","update","renderer","render","camera","mount","clientWidth","clientHeight","Scene","PerspectiveCamera","up","OrbitControls","WebGLRenderer","antialias","setClearColor","setSize","appendChild","domElement","prevProps","remove","dispose","removeChild","alignItems","backgroundColor","SlideItem","Legend","settings","dots","infinite","speed","slidesToShow","slidesToScroll","vertical","verticalSwiping","arrows","swipeToSlide","afterChange","changeStartingIndex","verticalAlign","slider","slickPrev","index_es","icon","faAngleUp","lib_default","assign","self","slickNext","faAngleDown","PreferenceSpace","updateContextHullVertices","vertext","vert","components_ConvexHull","components_Legend","Visuals","minWidth","components_Histogram","components_PreferenceSpace","Stats","prunedTrs","leftTrs","classNames","table-fixed","components_Question","components_Visuals","components_Stats","restart","th","components_Welcome","components_Interaction","components_Result","onRuntimeInitialized","_onRuntimeInitialized","_yield$loadDataset","_yield$loadDataset2","store","createStore","rootReducer","es","components_App","getElementById","script","async","body","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.7cfeb5c1.chunk.js","sourcesContent":["export const SET_ACTIVE_COMPONENT = \"SET_ACTIVE_COMPONENT\";\r\nexport const SET_CANDIDATES = \"SET_CANDIDATES\";\r\nexport const SET_DATASET = \"SET_DATASET\";\r\nexport const TOGGLE_MASK = \"TOGGLE_MASK\";\r\nexport const PRUNE_POINTS = \"PRUNE_POINTS\";\r\nexport const SET_LEFT_POINTS = \"SET_LEFT_POINTS\";\r\nexport const SET_MODE = \"SET_MODE\";\r\nexport const SET_K = \"SET_K\";\r\nexport const RESTART = \"RESTART\";\r\nexport const UPDATE_CONVEX_HULL = \"UPDATE_CONVEX_HULL\";\r\n\r\nexport const setActiveComponent = component => ({\r\n  type: SET_ACTIVE_COMPONENT,\r\n  component\r\n});\r\n\r\nexport const setCandidates = candidates => ({\r\n  type: SET_CANDIDATES,\r\n  candidates\r\n});\r\n\r\nexport const setDataset = (points, labels, attributes) => ({\r\n  type: SET_DATASET,\r\n  points,\r\n  labels,\r\n  attributes\r\n});\r\n\r\nexport const toggleMask = (attr, val) => ({\r\n  type: TOGGLE_MASK,\r\n  mask: { [attr]: val }\r\n});\r\n\r\nexport const prunePoints = (indices, step) => ({\r\n  type: PRUNE_POINTS,\r\n  indices,\r\n  step\r\n});\r\n\r\nexport const setLeftPoints = indices => ({\r\n  type: SET_LEFT_POINTS,\r\n  indices\r\n});\r\n\r\nexport const changeMode = mode => ({\r\n  type: SET_MODE,\r\n  mode\r\n});\r\n\r\nexport const changeK = K => ({\r\n  type: SET_K,\r\n  K\r\n});\r\n\r\nexport const restart = () => ({\r\n  type: RESTART\r\n});\r\n\r\nexport const updateConvexHull = vertices => ({\r\n  type: UPDATE_CONVEX_HULL,\r\n  vertices\r\n});\r\n","import { combineReducers } from \"redux\";\r\nimport {\r\n  SET_ACTIVE_COMPONENT,\r\n  SET_DATASET,\r\n  SET_CANDIDATES,\r\n  TOGGLE_MASK,\r\n  SET_LEFT_POINTS,\r\n  PRUNE_POINTS,\r\n  SET_MODE,\r\n  SET_K,\r\n  RESTART,\r\n  UPDATE_CONVEX_HULL\r\n} from \"../actions\";\r\n\r\nconst activeComponent = (state = \"Welcome\", action) => {\r\n  switch (action.type) {\r\n    case SET_ACTIVE_COMPONENT:\r\n      return action.component;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// all points in the dataset\r\nconst points = (state = null, action) => {\r\n  switch (action.type) {\r\n    case SET_DATASET:\r\n      return action.points;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// the labels of points\r\nconst labels = (state = null, action) => {\r\n  switch (action.type) {\r\n    // case SET_DATASET:\r\n    //   return action.labels;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// the attribute names\r\nconst attributes = (state = null, action) => {\r\n  switch (action.type) {\r\n    case SET_DATASET:\r\n      return action.attributes;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// the set of points in the specified ranges.\r\nconst candidates = (state = null, action) => {\r\n  switch (action.type) {\r\n    case SET_CANDIDATES:\r\n      return action.candidates;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// show/hide attributes (this feature is not exposed in the UI)\r\nconst mask = (state = null, action) => {\r\n  switch (action.type) {\r\n    case SET_DATASET:\r\n      const mask = {};\r\n      action.attributes.forEach(([attr, config]) => {\r\n        mask[attr] = 1;\r\n      });\r\n      return mask;\r\n    case TOGGLE_MASK:\r\n      return { ...state, ...action.mask };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// the set of points pruned.\r\n// it is an array of [idx, step no.]\r\nconst prunedPoints = (state = [], action) => {\r\n  switch (action.type) {\r\n    case RESTART:\r\n      return [];\r\n    case PRUNE_POINTS:\r\n      const points = action.indices.map(idx => [idx, action.step]);\r\n      return [...points, ...state];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// the set of candidate points\r\n// it is an array of indices\r\nconst leftPoints = (state = [], action) => {\r\n  switch (action.type) {\r\n    case RESTART:\r\n      return [];\r\n    case SET_LEFT_POINTS:\r\n      return action.indices;\r\n    case PRUNE_POINTS:\r\n      return state.filter(idx => action.indices.indexOf(idx) === -1);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// history of the number of left points\r\nconst numLeftPoints = (state = [], action) => {\r\n  switch (action.type) {\r\n    case SET_LEFT_POINTS:\r\n      return [action.indices.length];\r\n    case PRUNE_POINTS:\r\n      const prev = state[state.length - 1];\r\n      return [...state, prev - action.indices.length];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// the algorithm to select a pair of points.\r\nconst mode = (state = \"DMM\", action) => {\r\n  switch (action.type) {\r\n    case SET_MODE:\r\n      return action.mode;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n// the algorithm output K\r\nconst K = (state = 15, action) => {\r\n  switch (action.type) {\r\n    case SET_K:\r\n      return action.K;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\n// vertices of the convex hull of the preference space.\r\nconst vertices = (state = [], action) => {\r\n  switch (action.type) {\r\n    case UPDATE_CONVEX_HULL:\r\n      return action.vertices;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  activeComponent,\r\n  points,\r\n  labels,\r\n  attributes,\r\n  candidates,\r\n  mask,\r\n  prunedPoints,\r\n  leftPoints,\r\n  numLeftPoints,\r\n  mode,\r\n  K,\r\n  vertices\r\n});\r\n","// read points from a text file\nexport function parsePoints(text) {\n  const points = text\n    .trim()\n    .split(\"\\n\")\n    .slice(1) // the first line is <numOfPoints> <dimension>\n    .map(line =>\n      line\n        .trim()\n        .split(/\\s+/)\n        .map(str => parseFloat(str))\n    );\n  return points;\n}\n\n// read labels from a text file\nexport function parseLabels(text) {\n  const labels = text.trim().split(\"\\n\");\n  return labels;\n}\n\n// check if val is in the range [low, high].\nfunction isInRange(val, low, high) {\n  return low <= val && val <= high;\n}\n\n// get the range of each attribute in a set of points.\nexport const getRanges = points => {\n  const ranges = points[0].map(x => ({ low: x, high: x }));\n  points.slice(1).forEach(point => {\n    point.forEach((x, i) => {\n      ranges[i].low = Math.min(ranges[i].low, x);\n      ranges[i].high = Math.max(ranges[i].high, x);\n    });\n  });\n  return ranges;\n};\n\n// load a dataset by reading its points and labels.\nexport const loadDataset = async (pointsURL, labelsURL) => {\n  let response = await fetch(pointsURL);\n  const points = parsePoints(await response.text());\n  if (labelsURL === undefined) {\n    return points;\n  }\n  response = await fetch(labelsURL);\n  const labels = parseLabels(await response.text());\n  return [points, labels];\n};\n\n// get points that are in the specified ranges.\nexport const selectCandidates = (points, ranges, mask, maxPoints) => {\n  const candidates = [];\n  for (let i = 0; i < points.length; ++i) {\n    if (candidates.length >= maxPoints) break;\n    const point = points[i];\n    let isValid = true;\n    for (let j = 0; j < point.length; ++j) {\n      if (mask[j] && !isInRange(point[j], ranges[j][0], ranges[j][1])) {\n        isValid = false;\n        break;\n      }\n    }\n    if (isValid) candidates.push(point);\n  }\n  return candidates;\n};\n\n// convert a JS array to a C++ 2D vector\nexport const array2Vector2D = array => {\n  const vector = new window.Module.VecVecDouble();\n  array.forEach(arr => {\n    const vec = new window.Module.VectorDouble();\n    arr.forEach(x => vec.push_back(x));\n    vector.push_back(vec);\n    vec.delete();\n  });\n  return vector;\n};\n\n// convert a C++ 2D vector to a JS array\nexport const vector2Array2D = vector => {\n  const array = [];\n  for (let i = 0; i < vector.size(); ++i) {\n    const vec = vector.get(i);\n    const arr = [];\n    for (let j = 0; j < vec.size(); ++j) arr.push(vec.get(j));\n    array.push(arr);\n  }\n  return array;\n};\n\n// convert a C++ vector to a JS array\nexport const vector2Array = vector => {\n  const array = [];\n  for (let i = 0; i < vector.size(); ++i) {\n    array.push(vector.get(i));\n  }\n  return array;\n};\n\n// convert a JS array to a C++ vector\nexport const array2Vector = array => {\n  const vec = new window.Module.VectorDouble();\n  array.forEach(x => vec.push_back(x));\n  return vec;\n};\n\n\n\n// get the indices of points pruned.\n// both prevIndices and currIndices need to be sorted.\nexport const getPrunedIndices = (prevIndices, currIndices) => {\n  let prunedIndices = [];\n  for (let i = 0, j = 0; i < prevIndices.size() || j < currIndices.size();) {\n    if (j >= currIndices.size() || prevIndices.get(i) < currIndices.get(j)) {\n      prunedIndices.push(prevIndices.get(i));\n      ++i;\n    } else {\n      ++i;\n      ++j;\n    }\n  }\n  return prunedIndices;\n};\n\nconst dominates = (p1, p2, smallerBetter, isSelected ) => {\n  let i;\n  for ( i = 0; i < p1.length; i++) {\n    // console.log('121313', isSelected[i], p1.length);\n    // if (isSelected) {\n    //   console.log('121313', isSelected, smallerBetter);\n    // }\n    // if (isSelected == undefined) {\n    //   console.log('dwadadw');\n    // }\n    if ( isSelected.at(i) == 1) {\n    // if ( isSelected.at(i) == 1) {\n      // console.log('121313', isSelected[i], smallerBetter[i]);\n      if (smallerBetter[i] == 1) {\n        if (p1[i] > p2[i]) return 0;\n      } else {\n        if (p1[i] < p2[i]) return 0;\n      }\n    }\n  }\n  return 1;\n}\n\nexport const getSkyline = (points, smallerBetter, isSelected) => {\n  let i, j, dominated, index = 0, m;\n  console.log(smallerBetter, isSelected);\n  let sl = new Array(points.length);\n  for (i =0; i < points.length; i++) {\n    \n    dominated = 0;\n    const pt = points.at(i).slice();\n\n    for (j = 0; j < index && ! dominated; ++j) {\n      if (dominates(points[sl[j]], pt, smallerBetter, isSelected))\n        dominated = 1;\n    }\n\n    if (!dominated) {\n      m = index;\n      index = 0;\n      for (j =0; j < m; j++) {\n        if ( !dominates(pt, points[sl[j]], smallerBetter, isSelected)) {\n          sl[index++] = sl[j];\n        }\n      }\n      sl[index++] = i;\n    }\n  }\n  return index;\n}","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  setActiveComponent,\r\n  setLeftPoints,\r\n  prunePoints,\r\n  updateConvexHull\r\n} from \"../actions\";\r\nimport {\r\n  array2Vector2D,\r\n  array2Vector,\r\n  vector2Array,\r\n  getPrunedIndices,\r\n  vector2Array2D\r\n} from \"../utils\";\r\nimport {\r\n  FlexibleXYPlot,\r\n  XAxis,\r\n  YAxis,\r\n  Hint,\r\n  VerticalBarSeries,\r\n  ChartLabel\r\n} from \"react-vis\";\r\nvar smallerBetter, candidatesVec, isSelected;\r\n\r\n// iteratively ask the user to choose the preferred car from a pair of cars.\r\nclass Question extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    smallerBetter = new window.Module.VectorInt();\r\n    isSelected = new window.Module.VectorInt();\r\n    this.attributes = [];\r\n    this.props.attributes.forEach(([attr, config]) => {\r\n      console.log(this.props.mask[attr])\r\n      isSelected.push_back(this.props.mask[attr])\r\n      if (this.props.mask[attr]) {\r\n        smallerBetter.push_back(config.smallerBetter ? 1 : 0);\r\n        this.attributes.push(attr);\r\n      }\r\n    });\r\n    console.log(this.props.candidates)\r\n    candidatesVec = array2Vector2D(this.props.candidates);\r\n    // console.log('mode', this.props.mode)\r\n    // new algorithm\r\n    if (!['Random', 'Simplex', 'Parti'].includes(this.props.mode)) {\r\n      var d1 = new Date();\r\n      this.runner = new window.Module.SevenAlgorithmRunner(\r\n        candidatesVec,\r\n        smallerBetter,\r\n        isSelected,\r\n        { 'DMM': 4, 'cube': 5, 'sphere': 6, 'graphDP': 7, 'biSearch': 8, 'sweepDP': 9, 'IncGreedy': 10 }[this.props.mode],\r\n        this.props.K\r\n      );\r\n      var d2 = new Date();\r\n      this.state = {\r\n        performanceIndex: [{\r\n          x: 0,\r\n          y: this.runner.getMrr(),\r\n          runtime: d2 - d1,\r\n          mrr: this.runner.getMrr()\r\n        }]\r\n      }\r\n      console.log(this.runner)\r\n      candidatesVec.delete();\r\n      return this.pageResult = 'NewAlgorithm'\r\n    }\r\n\r\n    // old algorithm\r\n    this.runner = new window.Module.AlgorithmRunner(\r\n      candidatesVec,\r\n      smallerBetter,\r\n      isSelected,\r\n      { 'Random': 1, 'Simplex': 2, 'Parti': 3 }[this.props.mode]\r\n    );\r\n    console.log(this.runner)\r\n    candidatesVec.delete();\r\n    this.prevIndices = this.runner.getCandidatesIndices();\r\n    this.props.setLeftPoints(vector2Array(this.prevIndices));\r\n    if (this.prevIndices.size() < 2) {\r\n      this.state = { pair: [] };\r\n      this.stopInteraction();\r\n    } else {\r\n      const vec = window.Module.readConvexHullVertices();\r\n      const convexHullVertices = vector2Array2D(vec);\r\n      vec.delete();\r\n      console.log('create convexhullvertices:', convexHullVertices);\r\n      this.props.updateConvexHull(convexHullVertices);\r\n      const indices = this.runner.nextPair();\r\n      this.state = {\r\n        pair: vector2Array(indices)\r\n      };\r\n    }\r\n    return this.pageResult = 'OldAlgorithm'\r\n  }\r\n\r\n  next = () => {\r\n    const selectedPoint = vector2Array(this.runner.getIndices())\r\n    if (this.selectedPoint && this.selectedPoint.length === selectedPoint.length) return;\r\n    this.selectedPoint = selectedPoint\r\n    var d1 = new Date();\r\n    this.runner.Next_IncGreedy()\r\n    var d2 = new Date();\r\n    console.log(d2 - d1);\r\n    var _performanceIndex = this.state.performanceIndex\r\n    _performanceIndex.push({\r\n      x: _performanceIndex.length,\r\n      y: this.runner.getMrr(),\r\n      runtime: d2 - d1,\r\n      mrr: this.runner.getMrr()\r\n    })\r\n    this.setState({ performanceIndex: _performanceIndex })\r\n    // candidatesVec.delete();\r\n  }\r\n\r\n  choose = idx => {\r\n    const option = idx + 1;\r\n    this.runner.choose(option);\r\n    const convexHullVertices = vector2Array2D(\r\n      window.Module.readConvexHullVertices()\r\n    );\r\n    console.log('vertices to paint', convexHullVertices)\r\n    this.props.updateConvexHull(convexHullVertices);\r\n    const currIndices = this.runner.getCandidatesIndices();\r\n    const prunedIndices = getPrunedIndices(this.prevIndices, currIndices);\r\n    const questioNo = this.props.numLeftPoints.length;\r\n    this.props.prunePoints(prunedIndices, questioNo);\r\n    this.prevIndices.delete();\r\n    this.prevIndices = currIndices;\r\n    if (currIndices.size() < 2) {\r\n      this.stopInteraction();\r\n    } else {\r\n      const indices = this.runner.nextPair();\r\n      this.setState({\r\n        pair: vector2Array(indices)\r\n      });\r\n    }\r\n  };\r\n\r\n  stopInteraction = () => {\r\n    this.prevIndices.delete();\r\n    this.runner.delete();\r\n    this.props.showResult();\r\n  };\r\n\r\n\r\n  inputDimension = () => {\r\n    var D = prompt('Please input ' + this.attributes.length + ' dimensions. e.g: one integer value for each attribute. A larger value indicates that the corresponding attribute is more important. e.g.', this.attributes.map((i) =>  Math.floor(Math.random() * 10)))\r\n    if (!D) return\r\n    var jsArray = D.trim().split(',').map((n) => parseInt(n))\r\n    if (jsArray.includes(NaN) || jsArray.length !== this.attributes.length || jsArray.some((i) => i < 0)) return alert('Illegal number set!')\r\n    this.runner.globalBest_localBest(array2Vector(jsArray))\r\n    this.global_local_regret = { globalBest: this.props.candidates[this.runner.get_globalBestId()], localBest: this.props.candidates[this.runner.get_localBestId()], regretRatio: this.runner.get_regret_ratio() }\r\n    this.setState({ global_local_regret: this.global_local_regret })\r\n  }\r\n\r\n  render() {\r\n    if (this.pageResult === 'OldAlgorithm') {\r\n      const ths = [<th key=\"Option No.\">Option</th>];\r\n      this.attributes.forEach(attr => {\r\n        ths.push(<th key={attr}>{attr}</th>);\r\n      });\r\n      ths.push(<th key=\"chooseButton\" />);\r\n\r\n      const trs = this.state.pair.map((idx, i) => {\r\n        const tds = [<td key=\"Option No.\">{i + 1}</td>];\r\n        this.props.candidates[idx].forEach((x, j) => {\r\n          if (this.props.mask[this.props.attributes[j][0]]) {\r\n            tds.push(<td key={j}>{x}</td>);\r\n          }\r\n        });\r\n        tds.push(\r\n          <td key=\"chooseButton\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-outline-success btn-sm\"\r\n              onClick={() => this.choose(i)}\r\n            >\r\n              Choose\r\n            </button>\r\n          </td>\r\n        );\r\n        return (\r\n          <tr key={i} data-toggle=\"tooltip\" title={this.props.labels[idx]}>\r\n            {tds}\r\n          </tr>\r\n        );\r\n      });\r\n\r\n      return (\r\n        <div>\r\n          <h2 style={{ 'background': 'gainsboro', 'borderRadius': '5px', 'padding': '5px' }}>Your Choice</h2>\r\n          <h4>\r\n            Q{this.props.numLeftPoints.length}: Choose the Tuple You Favor More\r\n            among the Following Options\r\n          </h4>\r\n          <div className=\"row justify-content-center align-items-center\">\r\n            <div className=\"col-md-8\">\r\n              <table className=\"table table-hover text-center\">\r\n                <thead>\r\n                  <tr>{ths}</tr>\r\n                </thead>\r\n                <tbody>{trs}</tbody>\r\n              </table>\r\n            </div>\r\n            <div className=\"col-md-1\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-primary\"\r\n                onClick={this.stopInteraction}\r\n              >\r\n                Stop\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    // new algorithm\r\n    let ths = [<th key=\"Option No.\">Option ID</th>];\r\n    this.attributes.forEach(attr => {\r\n      ths.push(<th key={attr}>{attr}</th>)\r\n    });\r\n    const selectedPoint = vector2Array(this.runner.getIndices())\r\n    console.log(selectedPoint)\r\n    console.log(this.runner.getMrr())\r\n\r\n    const trs = selectedPoint.slice(-this.props.K).map((id, i) => {\r\n      const tds = [<td key=\"Option No.\">{id}</td>];\r\n      console.log(id)\r\n      if(id===-1) return\r\n      this.props.candidates[id].forEach((x, j) => {\r\n        if (this.props.mask[this.props.attributes[j][0]]) {\r\n          tds.push(<td key={j}>{x}</td>);\r\n        }\r\n      });\r\n      return (\r\n        <tr key={i} data-toggle=\"tooltip\" title={this.props.attributes[id]}>\r\n          {tds}\r\n        </tr>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div>\r\n        <br />\r\n        <div style={{ 'borderRadius': '5px', 'padding': '5px', 'fontSize': '22px' }}>\r\n          <span style={{ 'color': '#ff8737' }}>{this.props.mode}</span> selects at most k tuples for you\r\n        </div>\r\n        <br />\r\n        <table style={{ 'borderBottom': '1px solid gainsboro' }} className=\"table table-hover text-center\">\r\n          <thead>\r\n            <tr>{ths}</tr>\r\n          </thead>\r\n          <tbody>{trs}</tbody>\r\n        </table>\r\n        <div style={{ 'display': 'flex', 'justifyContent': 'space-between', 'padding': '0 10px', }}>\r\n          <div>\r\n            Output size: {selectedPoint.length}\r\n          </div>\r\n          <div onClick={this.inputDimension} style={{ 'background': '#ff8737', 'color': 'white', 'padding': '5px', 'borderRadius': '5px' }}>\r\n            Input D Dimensions\r\n          </div>\r\n        </div>\r\n        <br />\r\n\r\n        {this.props.mode === 'IncGreedy' ? (\r\n          <div>\r\n            <div style={{ 'margin': 'auto', width: \"30rem\", 'height': '28rem' }}>\r\n              <FlexibleXYPlot onMouseLeave={() => {\r\n                this.setState({ hintValue: null })\r\n              }}>\r\n                <XAxis\r\n                  tickValues={this.state.performanceIndex.map((val, idx) => idx)}\r\n                  tickFormat={value => value.toString()}\r\n                  style={{\r\n                    ticks: { fill: \"black\" }\r\n                  }}\r\n                />\r\n                <YAxis\r\n                  style={{\r\n                    ticks: { fill: \"black\" }\r\n                  }}\r\n                />\r\n                <ChartLabel\r\n                  text=\"Rounds\"\r\n                  includeMargin={false}\r\n                  xPercent={0.82}\r\n                  yPercent={1.06}\r\n                  style={{\r\n                    style: { fill: \"black\" }\r\n                  }}\r\n                />\r\n                <ChartLabel\r\n                  text=\"MRR(maximun regret ratio)\"\r\n                  includeMargin={false}\r\n                  xPercent={-0.01}\r\n                  yPercent={0.05}\r\n                  style={{\r\n                    transform: \"rotate(-90)\",\r\n                    textAnchor: \"end\",\r\n                    style: { fill: \"black\" }\r\n                  }}\r\n                />\r\n                <VerticalBarSeries\r\n                  color=\"#ff8737\"\r\n                  onNearestX={(value, { index }) => {\r\n                    this.setState({ hintValue: '' + index })\r\n                  }}\r\n                  data={this.state.performanceIndex}\r\n                  animation\r\n                />\r\n                {this.state.hintValue && (\r\n                  <Hint value={this.state.hintValue}>\r\n                    <p style={{ 'color': \"black\", 'textAlign': 'left' }}>\r\n                      Runtime: {this.state.performanceIndex[this.state.hintValue].runtime}ms<br />\r\n                      Mrr: {this.state.performanceIndex[this.state.hintValue].mrr.toFixed(4)}\r\n                    </p>\r\n                  </Hint>\r\n                )}\r\n              </FlexibleXYPlot>\r\n            </div>\r\n            <div style={{ 'background': '#ff8737', 'margin': 'auto', 'width': '100px', 'color': 'white', 'borderRadius': '3.25rem', 'padding': '5px' }} onClick={this.next}>Next</div>\r\n\r\n          </div>\r\n\r\n        ) : (\r\n          <div style={{ 'textAlign': 'left', 'padding': '8px', 'borderRadius': '5px', 'background': 'gainsboro' }}>\r\n            {this.props.mode} runtime: {this.state.performanceIndex[0].runtime} ms  <br /> MRR(maximun regret ratio): {this.state.performanceIndex[0].mrr}\r\n          </div>\r\n        )}\r\n        <br />\r\n        {this.global_local_regret ? (\r\n          <div style={{ 'background': '#ff8737', 'color': 'white', 'textAlign': 'left', 'borderRadius': '5px', 'padding': '8px' }}>\r\n\r\n            <div>Your global favorite tuple is:<br />\r\n              <table style={{ 'borderBottom': '1px solid gainsboro' }} className=\"table table-hover text-center\">\r\n                <thead>\r\n                  <tr>{ths}</tr>\r\n                </thead>\r\n                <tbody>{(() => {\r\n                  const tds = [<td key=\"Option No.\">{this.runner.get_globalBestId()}</td>];\r\n                  this.global_local_regret['globalBest'].forEach((x, j) => {\r\n                    if (this.props.mask[this.props.attributes[j][0]]) {\r\n                      tds.push(<td key={j}>{x}</td>);\r\n                    }\r\n                  })\r\n                  return tds\r\n                })()}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n\r\n            <div>Your local favorite tuple is:<br />\r\n              <table style={{ 'borderBottom': '1px solid gainsboro' }} className=\"table table-hover text-center\">\r\n                <thead>\r\n                  <tr>{ths}</tr>\r\n                </thead>\r\n                <tbody>{(() => {\r\n                  const tds = [<td key=\"Option No.\">{this.runner.get_localBestId()}</td>];\r\n                  this.global_local_regret['localBest'].forEach((x, j) => {\r\n                    if (this.props.mask[this.props.attributes[j][0]]) {\r\n                      tds.push(<td key={j}>{x}</td>);\r\n                    }\r\n                  })\r\n                  return tds\r\n                })()}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n\r\n            <div>Your regret ratio is: {this.global_local_regret['regretRatio']}</div>\r\n\r\n          </div>) : ''}\r\n        <br />\r\n        <button type=\"button\" className=\"btn btn-primary\" onClick={() => window.location.reload()}>\r\n          Return to Welcome\r\n        </button>\r\n        <br />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({\r\n  labels,\r\n  candidates,\r\n  mask,\r\n  attributes,\r\n  numLeftPoints,\r\n  mode,\r\n  K\r\n}) => ({\r\n  labels,\r\n  candidates,\r\n  mask,\r\n  attributes,\r\n  numLeftPoints,\r\n  mode,\r\n  K\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  showResult: () => {\r\n    dispatch(setActiveComponent(\"Result\"));\r\n  },\r\n  setLeftPoints: indices => {\r\n    dispatch(setLeftPoints(indices));\r\n  },\r\n  prunePoints: (indices, step) => {\r\n    dispatch(prunePoints(indices, step));\r\n  },\r\n  updateConvexHull: vertices => {\r\n    dispatch(updateConvexHull(vertices));\r\n  }\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Question);\r\n","import React from \"react\";\r\nimport {\r\n  setActiveComponent,\r\n  setCandidates,\r\n  toggleMask,\r\n  changeMode,\r\n  changeK,\r\n  setDataset\r\n} from \"../actions\";\r\nimport { connect } from \"react-redux\";\r\nimport { selectCandidates, getRanges, getSkyline } from \"../utils\";\r\nimport imgURL from '../assets/imgs/logo-black.png';\r\nimport imgFavorite from '../assets/imgs/favorite.png';\r\n\r\n// the welcome scene containing a brief introduction and a table to obtain the user's input\r\nclass Welcome extends React.Component {\r\n\r\n  upload = () => {\r\n    var target = document.createElement('input');\r\n    target.type = 'file';\r\n    target.accept = \".csv,text/plain\"\r\n    target.click()\r\n    target.onchange = (e) => {\r\n      console.log(e.path[0].files)\r\n      var reader = new FileReader();\r\n      reader.readAsText(e.path[0].files[0]);\r\n      reader.onload = () => {\r\n        const text = reader.result\r\n        // n k\r\n        // attributes.1 ... attributes.k\r\n        // 0.4534 ... 0.345(k)\r\n        var points_attr = text.trim().split(\"\\n\").slice(1)\r\n        // for points_attr, the first line is <numOfPoints> <dimension>\r\n        var points = points_attr.slice(1).map(line => line.trim().split(/\\s+/).map(str => isNaN(parseFloat(str)) ? 0 : parseFloat(str)));\r\n        console.log(points);\r\n        var ranges = getRanges(points)\r\n        console.log(ranges)\r\n        var attributes = points_attr[0].trim().split(/\\s+/).map((item, index) => {\r\n          let rangesItem = ranges[index]\r\n          rangesItem.smallerBetter = false\r\n          return [item, rangesItem]\r\n        })\r\n        console.log(attributes)\r\n        if (points.length < 5000) {\r\n          alert(\"please upload data more then 5000 rows!\");\r\n          return;\r\n        }\r\n        this.props.setDataset(points, '', attributes)\r\n      };\r\n    }\r\n  }\r\n\r\n  handleStart = () => {\r\n    let attNum = Object.values(this.props.mask).filter((i) => i === 1).length;\r\n    if (Object.values(this.props.mask).filter((i) => i === 1).length < 2) {\r\n      return alert('You should select at least two attributes')\r\n    }\r\n\r\n\r\n    const ranges = [];\r\n    const mask = [];\r\n    for (let i = 0; i < this.props.attributes.length; ++i) {\r\n      const [attr, config] = this.props.attributes[i];\r\n      const range = [config.low, config.high];\r\n      if (this.props.mask[attr]) {\r\n        for (let j = 0; j < 2; ++j) {\r\n          const str = this.inputs[attr][j].current.value.trim();\r\n          if (str === \"\") continue;\r\n          else if (isNaN(str)) {\r\n            alert(`${str} in range of ${attr} is not an integer`);\r\n            return;\r\n          } else {\r\n            range[j] = parseFloat(str);\r\n          }\r\n        }\r\n      }\r\n      ranges.push(range);\r\n      mask.push(this.props.mask[attr]);\r\n    }\r\n    let maxPoints;\r\n    const str = this.inputs.maxPoints.current.value.trim();\r\n    console.log('input number', str);\r\n    if (str === \"\") maxPoints = 5000;\r\n    else if (/\\d+/.test(str)) maxPoints = parseInt(str);\r\n    else if (maxPoints > 50000 || maxPoints < 5000) return alert('Too few valid tuples! Try more attributes, looser ranges, larger Max No. of Tuples or larger datasets!');\r\n    else {\r\n      alert(`${str} for Maximum items is not an integer`);\r\n      return;\r\n    }\r\n\r\n    if (maxPoints > 50000 || maxPoints < 5000) return alert('The input is out of the range, please input a number between 5000 ~ 50000');\r\n\r\n    if (!['Random', 'Simplex', 'Parti'].includes(this.props.mode)) {\r\n      var K = parseInt(prompt('Please input an integer more than ' + this.props.attributes.length))\r\n      if (!(/(^[1-9]\\d*$)/.test(K) && K >= this.props.attributes.length)) return alert('Illegal number!')\r\n      this.props.changeK(K)\r\n    } else {\r\n      if (attNum < 3) {\r\n        return alert('You should select at least three attributes')\r\n      } else if (attNum > 5) {\r\n        return alert('You should not select more than five attributes')\r\n      }\r\n    }\r\n\r\n    const candidates = selectCandidates(\r\n      this.props.points,\r\n      ranges,\r\n      mask,\r\n      maxPoints\r\n    );\r\n    if (candidates.length === 0) {\r\n      alert(\"No matching Tuples, try larger ranges\");\r\n      return;\r\n    }\r\n    console.log('attr', this.props.attributes);\r\n    let isSelected = this.props.attributes.map(([attr, config]) => {\r\n      return this.props.mask[attr];\r\n    })\r\n    let smallerBetter = this.props.attributes.map(([attr, config]) => {\r\n      return config.smallerBetter ? 1 : 0;\r\n    })\r\n    //console.log('input points--', candidates, isSelected, smallerBetter);\r\n\r\n    //Fconsole.log('input points--', candidates, isSelected, smallerBetter);\r\n    let skyline = getSkyline(candidates, smallerBetter, isSelected)\r\n    if (skyline < 10) {\r\n      console.log('skyline', skyline);\r\n      return alert('Too few valid tuples! Try more attributes, looser ranges, larger Max No. of Tuples or larger datasets!')\r\n    }\r\n    if (['graphDP', 'biSearch', 'sweepDP'].includes(this.props.mode)) {\r\n      if (Object.values(this.props.mask).filter((i) => i === 1).length != 2) {\r\n        return alert('You should select only two attributes to perform \"graphDP\" or \"biSearch\" or \"sweepDP\"');\r\n      }\r\n    }\r\n    // console.log('skyline', skyline);\r\n    this.props.startAlgorithm(candidates);\r\n  };\r\n\r\n  handleChange = event => {\r\n    if (['graphDP', 'biSearch', 'sweepDP'].includes(event.target.value)) {\r\n      console.log(this.props.mask)\r\n      if (Object.values(this.props.mask).filter((i) => i === 1).length > 2) {\r\n        alert(event.target.value + ' only supports 2D data!')\r\n        event.target.value = this.props.mode\r\n        return\r\n      }\r\n    }\r\n    console.log(event.target.value)\r\n    this.props.changeMode(event.target.value);\r\n  };\r\n\r\n  render() {\r\n    // Init inputs\r\n    this.inputs = {};\r\n    this.props.attributes.forEach(([attr, config]) => {\r\n      this.inputs[attr] = [React.createRef(), React.createRef()];\r\n    });\r\n    this.inputs.maxPoints = React.createRef();\r\n    // Iterate attributes\r\n    const trs = this.props.attributes.map(([attr, config], index) => {\r\n      const disabled = this.props.mask[attr] === 0;\r\n      const { low, high } = config;\r\n      return (\r\n        <tr key={attr}>\r\n          <td\r\n            className=\"align-middle\">\r\n            <span\r\n              onClick={() => {\r\n                console.log('mode', this.props.mode );\r\n                this.props.toggleMask(attr, 1 - this.props.mask[attr])\r\n              }}\r\n              className={`${this.props.mask[attr] ? \"attribute-select\" : null}`}\r\n              style={{ 'cursor': 'pointer', 'textDecoration': this.props.mask[attr] ? '' : 'line-through' }}\r\n            >{attr}</span>\r\n          </td>\r\n          <td>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder={low}\r\n              ref={this.inputs[attr][0]}\r\n              disabled={disabled}\r\n            />\r\n          </td>\r\n          <td>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder={high}\r\n              ref={this.inputs[attr][1]}\r\n              disabled={disabled}\r\n            />\r\n          </td>\r\n          <td className=\"align-middle hidden\">\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={disabled}\r\n              onChange={() =>\r\n                this.props.toggleMask(attr, 1 - this.props.mask[attr])\r\n              }\r\n            />\r\n          </td>\r\n          <td className=\"align-middle\" onClick={() => { this.props.attributes[index][1].smallerBetter = !this.props.attributes[index][1].smallerBetter; this.setState({ attributes: this.props.attributes }) }}>\r\n            {this.props.attributes[index][1].smallerBetter ? <span style={{\r\n              'background': '#ff8737',\r\n              'padding': '5px',\r\n              'borderRadius': '5px',\r\n              'color': 'white'\r\n            }}>Yes</span> : <span>No</span>}\r\n          </td>\r\n        </tr>\r\n      );\r\n    });\r\n    trs.push(\r\n      <tr key=\"other\">\r\n        <td className=\"align-middle font-weight-bold\">Max No. of Tuples</td>\r\n        <td>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder='5000'\r\n            ref={this.inputs.maxPoints}\r\n          />\r\n        </td>\r\n        <td style={{ 'textAlign': 'left' }}>\r\n          {/* <div className=\"col form-inline align-items-center\"> */}\r\n          <label className=\"mr-4 col-form-label font-weight-bold\">Mode</label>\r\n          <div className=\"mr-3 form-check form-check-inline\">\r\n            <div>\r\n              <select onChange={this.handleChange}>\r\n                <option value=\"DMM\">DMM</option>\r\n                <option value=\"cube\">cube</option>\r\n                <option value=\"sphere\">sphere</option>\r\n                <option value=\"Simplex\">Simplex</option>\r\n                <option value=\"Random\">Random</option>\r\n                <option value=\"Random\">Parti</option>\r\n                <option value=\"graphDP\">graphDP</option>\r\n                <option value=\"biSearch\">biSearch</option>\r\n                <option value=\"sweepDP\">sweepDP</option>\r\n                <option value=\"IncGreedy\">IncGreedy</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    );\r\n    return (\r\n      <div className=\"text-center m-auto\" style={{ maxWidth: \"50rem\" }}>\r\n        <img alt='' onClick={() => window.location.reload()} src={imgURL} style={{ 'width': '50px', 'position': 'absolute', 'top': '15px', 'left': '15px', 'cursor': 'pointer' }} />\r\n        <div type=\"button\"\r\n          title=\"Format of Input file\r\n                ------------------------------------&#13;\r\n                The format of the first line is: n d\r\n                n - the number of tuples in the dataset, integer\r\n                d - dimensionality, integer\r\n                The format of the second line is:\r\n                <A1> <A2> ... <Ad>\r\n                Ai - the i-th attribute name, string\r\n                The format of the following n lines is\r\n                <dim 1> <dim 2> ... <dim d>.\r\n                Each line corresponds to a tuple.\"\r\n          className=\"btn btn-primary upload\"\r\n          style={{ position: 'absolute', top: '15px', right: '15px', width: \"8rem\" }}\r\n          onClick={this.upload}\r\n        >\r\n          Upload\r\n        </div>\r\n        <img alt='' src={imgFavorite} style={{ 'width': '400px' }} />\r\n        <br />\r\n        <br />\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th className=\"align-middle\">Attribute</th>\r\n              <th>Lower bound</th>\r\n              <th>Upper bound</th>\r\n              <th>Smaller better</th>\r\n              <th className=\"hidden\">Discard</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{trs}</tbody>\r\n        </table>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary\"\r\n            style={{ width: \"8rem\" }}\r\n            onClick={this.handleStart}\r\n          >\r\n            Start\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ attributes, mask, points, mode }) => ({\r\n  attributes,\r\n  mask,\r\n  points,\r\n  mode\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  startAlgorithm: candidates => {\r\n    dispatch(setCandidates(candidates));\r\n    dispatch(setActiveComponent(\"Interaction\"));\r\n  },\r\n  toggleMask: (attr, mask) => dispatch(toggleMask(attr, mask)),\r\n  changeMode: mode => dispatch(changeMode(mode)),\r\n  changeK: K => dispatch(changeK(K)),\r\n  setDataset: (points, labels, attributes) => dispatch(setDataset(points, labels, attributes))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Welcome);\r\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  FlexibleXYPlot,\n  XAxis,\n  YAxis,\n  Hint,\n  VerticalBarSeries,\n  ChartLabel\n} from \"react-vis\";\n\n// a histogram to show the number of tuples left vs the number of questions asked.\nclass Histogram extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hintValue: null\n    };\n  }\n\n  _onMouseLeave = () => {\n    this.setState({\n      hintValue: null\n    });\n  };\n\n  _onNearestX = (value, { index }) => {\n    this.setState({\n      hintValue: this.props.data[index]\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <h4>No. of Tuples Left vs. No. of Questions Asked</h4>\n        <div style={{ width: \"25rem\", height: \"25rem\" }}>\n          <FlexibleXYPlot onMouseLeave={this._onMouseLeave}>\n            <XAxis\n              tickValues={this.props.data.map((val, idx) => idx)}\n              tickFormat={value => value.toString()}\n              style={{\n                ticks: { fill: \"black\" }\n              }}\n            />\n            <YAxis\n              style={{\n                ticks: { fill: \"black\" }\n              }}\n            />\n            <ChartLabel\n              text=\"Question No.\"\n              includeMargin={false}\n              xPercent={0.82}\n              yPercent={1.06}\n              style={{\n                style: { fill: \"black\" }\n              }}\n            />\n            <ChartLabel\n              text=\"No. of Tuples Left\"\n              includeMargin={false}\n              xPercent={-0.01}\n              yPercent={0.05}\n              style={{\n                transform: \"rotate(-90)\",\n                textAnchor: \"end\",\n                style: { fill: \"black\" }\n              }}\n            />\n            <VerticalBarSeries\n              color=\"#ff8737\"\n              onNearestX={this._onNearestX}\n              data={this.props.data}\n              animation\n            />\n            {this.state.hintValue && (\n              <Hint value={this.state.hintValue}>\n                <p style={{ color: \"black\" }}>\n                  Q{this.state.hintValue.x}: {this.state.hintValue.y} Tuples Left\n                </p>\n              </Hint>\n            )}\n          </FlexibleXYPlot>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ numLeftPoints }) => ({\n  data: numLeftPoints.map((num, i) => ({ x: i, y: num }))\n});\n\nexport default connect(mapStateToProps)(Histogram);\n","import * as THREE from \"three\";\nwindow.THREE = THREE;\nrequire(\"three/examples/js/controls/OrbitControls\");\nrequire(\"three/examples/js/QuickHull\");\nrequire(\"three/examples/js/geometries/ConvexGeometry\");\n\nexport default THREE;\n","import React from \"react\";\nimport THREE from \"./three\";\n\nconst SCALE = 100;\nconst FACTOR = 10; // font size = SCALE / FACTOR\n\n// the convex hull of the preference space\nclass ConvexHull extends React.Component {\n  componentDidMount() {\n    const width = this.mount.clientWidth;\n    const height = this.mount.clientHeight;\n\n    this.scene = new THREE.Scene();\n\n    this.camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 1000);\n    this.camera.position.set(1.5 * SCALE, 1.5 * SCALE, 0.5 * SCALE);\n    this.camera.up.set(0, 0, 1);\n    this.controls = new THREE.OrbitControls(this.camera, this.mount);\n    this.controls.update();\n\n    this.renderer = new THREE.WebGLRenderer({ antialias: true });\n    this.renderer.setClearColor(0xffffff);\n    this.renderer.setSize(width, height);\n    this.mount.appendChild(this.renderer.domElement);\n    this.addAxes();\n    this.drawGeometry();\n    this.start();\n  }\n\n  drawGeometry = () => {\n    let newVers = this.props.vertices.map(x => x);\n    // if (newVers.length < 4) return;\n    if (newVers.length < 4) {\n      if (newVers.length == 3) {\n        const tmp = newVers.at(0);\n        newVers.push(tmp);\n      } else {\n        return;\n      }\n    }\n    // if (this.props.vertices.length < 4) {\n    //   if (this.props.vertices.length == 3) {\n    //     console.log('333-1', this.props.vertices);\n\n    //     let ver = this.props.vertices.at(0);\n    //     this.props.vertices.push(ver);\n    //     console.log('333-2', this.props.vertices);\n    //   }\n    //   if (this.props.vertices.length == 2) {\n    //     console.log('222-1', this.props.vertices);\n\n    //     let ver = this.props.vertices.at(0);\n    //     this.props.vertices.push(ver);\n    //     this.props.vertices.push(ver);\n    //     console.log('222-2', this.props.vertices);\n    //   } else {\n    //       return;\n    //   }\n    // }\n    // if (this.props.vertices.length < 4) return;\n    const points = newVers.map(vertex => {\n      const scaled_vertex = vertex.map(x => x * SCALE);\n      return new THREE.Vector3(...scaled_vertex);\n    });\n    console.log(points, 'points to paint');\n    const geometry = new THREE.ConvexGeometry(points);\n    const material = new THREE.MeshBasicMaterial({\n      color: 0x87CEEB,\n      //shading: THREE.FlatShading,\n      polygonOffset: true,\n      polygonOffsetFactor: 1, // positive value pushes polygon further away\n      polygonOffsetUnits: 1,\n      opacity: 0.75,\n      transparent: true\n    });\n    this.mesh = new THREE.Mesh(geometry, material);\n    const geo = new THREE.EdgesGeometry(geometry); // or WireframeGeometry\n    const mat = new THREE.LineBasicMaterial({ color: 0x000000, linewidth: 2 });\n    const wireframe = new THREE.LineSegments(geo, mat);\n    this.mesh.add(wireframe);\n    this.scene.add(this.mesh);\n  };\n\n  addAxes = () => {\n    const axes = new THREE.AxesHelper(1.5 * SCALE);\n    this.scene.add(axes);\n    const typeface = require(\"three/examples/fonts/helvetiker_regular.typeface.json\");\n    const font = new THREE.Font(typeface);\n\n    const numConfig = [\n      // color, position, rotation\n      [\n        0xff0000,\n        [SCALE + SCALE / (FACTOR * 2), 0, 0],\n        [Math.PI / 2, Math.PI, 0]\n      ],\n      [\n        0x00ff00,\n        [0, SCALE - SCALE / (FACTOR * 2), 0],\n        [Math.PI / 2, Math.PI / 2, 0]\n      ],\n      [\n        0x0000ff,\n        [\n          SCALE / (FACTOR * Math.sqrt(2)),\n          -SCALE / (FACTOR * Math.sqrt(2)),\n          SCALE\n        ],\n        [Math.PI / 2, (Math.PI * 3) / 4, 0]\n      ]\n    ];\n\n    numConfig.forEach(([color, position, rotation]) => {\n      const shape = font.generateShapes(\"1\", SCALE / FACTOR);\n      const geometry = new THREE.ShapeBufferGeometry(shape);\n      const mesh = new THREE.Mesh(\n        geometry,\n        new THREE.MeshBasicMaterial({\n          color: color,\n          side: THREE.DoubleSide\n        })\n      );\n      mesh.position.set(...position);\n      mesh.rotation.set(...rotation);\n      this.scene.add(mesh);\n    });\n    window.lines = [];\n    const lineConfig = [\n      [0xff0000, [SCALE, 0, 0], [0, 0, 0]],\n      [0x00ff00, [0, SCALE, 0], [0, 0, -Math.PI / 2]],\n      [0x0000ff, [0, 0, SCALE], [0, 0, -Math.PI / 2]]\n    ];\n    lineConfig.forEach(([color, position, rotation]) => {\n      const material = new THREE.LineBasicMaterial({\n        color\n      });\n      const geometry = new THREE.Geometry();\n      geometry.vertices.push(\n        new THREE.Vector3(0, 0, 0),\n        new THREE.Vector3(0, SCALE / (2 * FACTOR))\n      );\n      const line = new THREE.Line(geometry, material);\n      line.position.set(...position);\n      line.rotation.set(...rotation);\n      this.scene.add(line);\n      window.lines.push(line);\n    });\n  };\n\n  componentDidUpdate(prevProps) {\n    if (this.props.vertices !== prevProps.vertices) {\n      if (this.mesh) {\n        this.scene.remove(this.mesh);\n        this.mesh.geometry.dispose();\n        this.mesh.material.dispose();\n      }\n      this.drawGeometry();\n    }\n  }\n\n  componentWillUnmount() {\n    this.stop();\n    this.mount.removeChild(this.renderer.domElement);\n  }\n\n  start = () => {\n    if (!this.frameId) {\n      this.frameId = window.requestAnimationFrame(this.animate);\n    }\n  };\n\n  stop = () => {\n    window.cancelAnimationFrame(this.frameId);\n  };\n\n  animate = () => {\n    this.controls.update();\n    this.renderer.render(this.scene, this.camera);\n    this.frameId = window.requestAnimationFrame(this.animate);\n  };\n\n  render() {\n    return (\n      <div\n        style={{ width: \"25rem\", height: \"25rem\" }}\n        ref={mount => {\n          this.mount = mount;\n        }}\n      />\n    );\n  }\n}\n\nexport default ConvexHull;\n","import React from \"react\";\nimport Slider from \"react-slick\";\nimport { connect } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleUp, faAngleDown } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction Line({ color }) {\n  return (\n    <div\n      style={{\n        width: \"100%\",\n        height: \"2rem\",\n        alignItems: \"center\",\n        display: \"flex\"\n      }}\n    >\n      <div style={{ width: \"100%\", height: \"2px\", backgroundColor: color }} />\n    </div>\n  );\n}\n\nfunction SlideItem({ text }) {\n  return (\n    <div\n      style={{\n        height: \"2rem\",\n        alignItems: \"center\",\n        display: \"flex\",\n        justifyContent: \"center\"\n      }}\n    >\n      {text}\n    </div>\n  );\n}\n\n// show/change the selected attributes for displaying the convex hull\nclass Legend extends React.Component {\n  constructor(props) {\n    super(props);\n    this.attributes = [];\n    //console.log('legend', this.props.mask, this.props.attributes);\n    this.props.attributes.forEach(([attr]) => {\n      if (this.props.mask[attr]) this.attributes.push(attr);\n    });\n  }\n  render() {\n    const settings = {\n      dots: false,\n      infinite: true,\n      speed: 500,\n      slidesToShow: this.attributes.length-1,\n      slidesToScroll: 1,\n      vertical: true,\n      verticalSwiping: true,\n      arrows: false,\n      swipeToSlide: true,\n      afterChange: this.props.changeStartingIndex\n    };\n    return (\n      <div\n        title=\"Click the arrows to change the selected attributes for displaying the convex hull.\"\n        style={{\n          width: \"12rem\"\n        }}\n      >\n        <div\n          style={{\n            alignItems: \"center\",\n            width: \"4rem\",\n            display: \"inline-block\",\n            verticalAlign: \"middle\"\n          }}\n        >\n          <Line color=\"#ff0000\" />\n          <Line color=\"#00ff00\" />\n          <Line color=\"#0000ff\" />\n        </div>\n        <div\n          style={{\n            width: \"8rem\",\n            display: \"inline-block\",\n            verticalAlign: \"middle\"\n          }}\n        >\n          <div\n            onClick={() => this.slider.slickPrev()}\n            style={{ cursor: \"pointer\" }}\n          >\n            <FontAwesomeIcon icon={faAngleUp} />\n          </div>\n          <Slider {...settings} ref={self => (this.slider = self)}>\n            {this.attributes.map((attr, key) => (<SlideItem key={key} text={attr}/>))}\n          </Slider>\n          <div\n            onClick={() => this.slider.slickNext()}\n            style={{ cursor: \"pointer\" }}\n          >\n            <FontAwesomeIcon icon={faAngleDown} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ mask, attributes }) => ({\n  mask,\n  attributes\n});\n\nexport default connect(mapStateToProps)(Legend);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport ConvexHull from \"./ConvexHull\";\nimport Legend from \"./Legend\";\n\n// to visualize the preference space.\nclass PreferenceSpace extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      index: 0,\n      convexHullVertices: props.vertices.map(vert => vert.slice(0, 3))\n    };\n  }\n\n  updateContextHullVertices = index => {\n    const convexHullVertices = this.props.vertices.map(vertext => {\n      const vert = [];\n      for (let i = 0; i < 3; ++i) {\n        vert.push(vertext[(i + index) % 4]);\n      }\n      return vert;\n    });\n    this.setState({ convexHullVertices });\n  };\n\n  componentDidUpdate(prevProps) {\n    if (this.props.vertices !== prevProps.vertices) {\n      this.updateContextHullVertices(this.state.index);\n    }\n  }\n\n  changeStartingIndex = index => {\n    this.setState({ index });\n    // explicitly pass index to this.updateContextHullVertices\n    // because this.state.index is not updated immediately,\n    // i.e., this.state.index has still the old value at this line.\n    this.updateContextHullVertices(index);\n  };\n\n  render() {\n    console.log('vertices', this.state.convexHullVertices);\n    return (\n      <div>\n        <h4>Convex Hull of Preference Space</h4>\n        <ConvexHull vertices={this.state.convexHullVertices} />\n        <div style={{ position: \"absolute\", top: \"2rem\", left: \"20rem\" }}>\n          <Legend changeStartingIndex={this.changeStartingIndex} />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ vertices }) => ({ vertices });\n\nexport default connect(mapStateToProps)(PreferenceSpace);\n","import React from \"react\";\nimport Histogram from \"./Histogram\";\nimport PreferenceSpace from \"./PreferenceSpace\";\n\nfunction Visuals() {\n  return (\n    <div>\n      <h2 style={{'background':'gainsboro','borderRadius':'5px','padding':'5px'}}>Visuals</h2>\n      <div className=\"row justify-content-center\">\n        <div className=\"col-6\" style={{ minWidth: \"500px\" }}>\n          <Histogram />\n        </div>\n        <div className=\"col-6\" style={{ minWidth: \"500px\" }}>\n          <PreferenceSpace />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Visuals;\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport classNames from \"classnames\";\r\n\r\n// statistics including the number of cars pruned/left.\r\nclass Stats extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.attributes = [];\r\n    this.props.attributes.forEach(([attr, config]) => {\r\n      if (this.props.mask[attr]) {\r\n        this.attributes.push(attr);\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let ths = [<th key=\"Step No.\">Step</th>];\r\n    this.attributes.forEach(attr => {\r\n      ths.push(<th key={attr}>{attr}</th>);\r\n    });\r\n    const prunedTrs = this.props.prunedPoints.map(([idx, step], i) => (\r\n      <tr key={i} data-toggle=\"tooltip\" title={this.props.labels[idx]}>\r\n        {[<td>{step}</td>].concat(this.props.candidates[idx].map((x, j) => {\r\n          if (this.props.mask[this.props.attributes[j][0]]) {\r\n            return <td key={j}>{x}</td>\r\n          }\r\n        }\r\n        ))}\r\n      </tr>\r\n    ));\r\n    const leftTrs = this.props.leftPoints.map((idx, i) => (\r\n      <tr key={i} data-toggle=\"tooltip\" title={this.props.labels[idx]}>\r\n        {this.props.candidates[idx].map((x, j) => {\r\n          if (this.props.mask[this.props.attributes[j][0]]) {\r\n            return <td key={j}>{x}</td>\r\n          }\r\n        })}\r\n      </tr>\r\n    ));\r\n    return (\r\n      <div>\r\n        <h2 style={{ 'background': 'gainsboro', 'borderRadius': '5px', 'padding': '5px' }}>Statistics</h2>\r\n        <div className=\"row\">\r\n          <div className=\"col\">\r\n            <h4>The No. of Tuples Pruned: {this.props.prunedPoints.length}</h4>\r\n            <table\r\n              className={classNames(\"table\", \"table-hover\", {\r\n                \"table-fixed\": prunedTrs.length > 7\r\n              })}\r\n              style={{\r\n                minWidth: \"37rem\"\r\n              }}\r\n            >\r\n              <thead>\r\n                <tr>{ths}</tr>\r\n              </thead>\r\n              <tbody>{prunedTrs}</tbody>\r\n            </table>\r\n          </div>\r\n          <div className=\"col\">\r\n            <h4>\r\n              The No. of Tuples Left in the Database:{\" \"}\r\n              {this.props.leftPoints.length}\r\n            </h4>\r\n            <table\r\n              className={classNames(\"table\", \"table-hover\", {\r\n                \"table-fixed\": leftTrs.length > 7\r\n              })}\r\n              style={{\r\n                minWidth: \"30rem\"\r\n              }}\r\n            >\r\n              <thead>\r\n                <tr>{ths.slice(1)}</tr>\r\n              </thead>\r\n              <tbody>{leftTrs}</tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToPropsStats = ({\r\n  labels,\r\n  candidates,\r\n  prunedPoints,\r\n  leftPoints,\r\n  attributes,\r\n  mask\r\n}) => ({\r\n  labels,\r\n  candidates,\r\n  prunedPoints,\r\n  leftPoints,\r\n  attributes,\r\n  mask\r\n});\r\n\r\nexport default connect(mapStateToPropsStats)(Stats);\r\n","import React from \"react\";\nimport Question from \"./Question\";\nimport Visuals from \"./Visuals\";\nimport Stats from \"./Stats\";\nimport { connect } from \"react-redux\";\nimport imgURL from '../assets/imgs/logo-black.png';\nfunction Interaction({ mode }) {\n  if (['Random', 'Simplex', 'Parti'].includes(mode)) {\n    return (\n      <div>\n        <Question />\n        <Visuals />\n        <Stats />\n      </div>\n    );\n  } else {\n    return (\n      <div>\n        <img alt='' onClick={() => window.location.reload()} src={imgURL} style={{ 'width': '50px', 'position': 'absolute', 'top': '15px', 'left': '15px', 'cursor': 'pointer' }} />\n        <Question />\n      </div>\n    )\n  }\n}\nconst mapStateToProps = ({ mode }) => ({\n  mode\n});\nexport default connect(mapStateToProps)(Interaction);\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport classNames from \"classnames\";\r\nimport { setActiveComponent, restart } from \"../actions\";\r\nimport Histogram from \"./Histogram\";\r\n\r\n// show the number of questions asked and the favourite car/remaining cars.\r\nfunction Result({\r\n  labels,\r\n  candidates,\r\n  leftPoints,\r\n  attributes,\r\n  mask,\r\n  numLeftPoints,\r\n  restart\r\n}) {\r\n  let ths = [];\r\n  attributes.forEach(([attr, config]) => {\r\n    if (mask[attr]) {\r\n      const th = <th key={attr}>{attr}</th>;\r\n      ths.push(th);\r\n    }\r\n  });\r\n  const trs = leftPoints.map((idx, i) => (\r\n    <tr key={i} data-toggle=\"tooltip\" title={labels[idx]}>\r\n      {candidates[idx].map((x, j) => {\r\n        if (mask[attributes[j][0]]) {\r\n          return <td key={j}>{x}</td>\r\n        }\r\n      })}\r\n    </tr>\r\n  ));\r\n  return (\r\n    <div className=\"justify-content-center\">\r\n      <h4>The Total No. of Questions Asked is: {numLeftPoints.length - 1}.</h4>\r\n      <h4>\r\n        {leftPoints.length === 1\r\n          ? \"Your Favourite Tuple is:\"\r\n          : `${leftPoints.length} Tuples Left in the Database:`}\r\n      </h4>\r\n      <table\r\n        className={classNames(\"table\", \"table-hover\", {\r\n          \"table-fixed\": trs.length > 7\r\n        })}\r\n        style={{\r\n          maxWidth: \"40rem\",\r\n          margin: \"auto\"\r\n        }}\r\n      >\r\n        <thead>\r\n          <tr>{ths}</tr>\r\n        </thead>\r\n        <tbody>{trs}</tbody>\r\n      </table>\r\n      <div className=\"d-flex justify-content-center my-3\">\r\n        <Histogram />\r\n      </div>\r\n      <div>\r\n        <button type=\"button\" className=\"btn btn-primary\" onClick={restart}>\r\n          Return to Welcome\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = ({\r\n  labels,\r\n  candidates,\r\n  leftPoints,\r\n  attributes,\r\n  mask,\r\n  numLeftPoints\r\n}) => ({\r\n  labels,\r\n  candidates,\r\n  leftPoints,\r\n  attributes,\r\n  mask,\r\n  numLeftPoints\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  restart: () => {\r\n    dispatch(setActiveComponent(\"Welcome\"));\r\n    dispatch(restart());\r\n  }\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Result);\r\n","import React from \"react\";\r\nimport Welcome from \"./Welcome\";\r\nimport Interaction from \"./Interaction\";\r\nimport Result from \"./Result\";\r\nimport { connect } from \"react-redux\";\r\n// import imgURL from '../assets/imgs/logo-black.png';\r\n// import imgFavorite from '../assets/imgs/favorite.png';\r\n// import { getRanges } from \"../utils\";\r\n\r\n\r\nfunction App({ activeComponent }) {\r\n  // var upload = () => {\r\n  //   var target = document.createElement('input');\r\n  //   target.type = 'file';\r\n  //   target.accept = \".csv,text/plain\"\r\n  //   target.click()\r\n  //   target.onchange = (e) => {\r\n  //     console.log(e.path[0].files)\r\n  //     var reader = new FileReader();\r\n  //     reader.readAsText(e.path[0].files[0]);\r\n  //     reader.onload = () => {\r\n  //       const text = reader.result\r\n  //       // n k\r\n  //       // attributes.1 ... attributes.k\r\n  //       // 0.4534 ... 0.345(k)\r\n  //       var points_attr = text.trim().split(\"\\n\").slice(1)\r\n  //       // the first line is <numOfPoints> <dimension>\r\n  //       var points = points_attr.slice(1).map(line => line.trim().split(/\\s+/).map(str => parseFloat(str)));\r\n  //       var ranges = getRanges(points)\r\n  //       var attributes = points_attr[0].trim().split(/\\s+/).map((item, index) => {\r\n  //         let rangesItem = ranges[index]\r\n  //         rangesItem.smallerBetter = false\r\n  //         return [item, rangesItem]\r\n  //       })\r\n  //       console.log(attributes)\r\n  //       this.props.setDataset(points, '', attributes)\r\n  //     };\r\n  //   }\r\n  // }\r\n  switch (activeComponent) {\r\n  //   case \"Home\":\r\n  //     return <div>\r\n  //       <img alt='' onClick={() => window.location.reload()} src={imgURL} style={{ 'width': '50px', 'position': 'absolute', 'top': '15px', 'left': '15px', 'cursor': 'pointer' }} />\r\n  //       <img alt='' src={imgFavorite} style={{ 'width': '400px' }} />\r\n  //       <div>\r\n  //         <div type=\"button\"\r\n  //           className=\"btn btn-primary\"\r\n  //           style={{ width: \"8rem\" }}\r\n  //           onClick={upload}\r\n  //         >\r\n  //           Upload\r\n  //         </div>\r\n  //         <div style={{'width': '100px','display':'inline-block'}}></div>\r\n  //         <div type=\"button\"\r\n  //           className=\"btn btn-primary\"\r\n  //           style={{ width: \"8rem\" }}\r\n  //           onClick={()=>activeComponent= 'Welcome'}\r\n\r\n  //         >\r\n  //           Sample\r\n  //         </div>\r\n  //       </div>\r\n\r\n  //     </div>\r\n    case \"Welcome\":\r\n      return <Welcome />;\r\n    case \"Interaction\":\r\n      return <Interaction />;\r\n    case \"Result\":\r\n      return <Result />;\r\n    default:\r\n      return <div />;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ activeComponent }) => ({\r\n  activeComponent\r\n});\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","import { createStore } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\nimport React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport App from \"./components/App\";\r\nimport { loadDataset } from \"./utils\";\r\n\r\nwindow.Module = {\r\n  onRuntimeInitialized: async function() {\r\n    const [points, labels] = await loadDataset(\r\n      \"./datasets/cars.txt\",\r\n      \"./datasets/labelsOfCars.txt\"\r\n    );\r\n    const attributes = [\r\n      [\"Price (USD)\", { low: 1000, high: 50000, smallerBetter: true }],\r\n      [\"Year\", { low: 2001, high: 2017, smallerBetter: false }],\r\n      [\"Power (HP)\", { low: 50, high: 400, smallerBetter: false }],\r\n      [\"Used KM\", { low: 10000, high: 150000, smallerBetter: true }]\r\n    ];\r\n    const mask = {};\r\n    attributes.forEach(([attr, config],index) => {\r\n      mask[attr] = 1;\r\n    });\r\n    console.log(mask)\r\n\r\n    const store = createStore(\r\n      rootReducer,\r\n      { points, labels, attributes, mask }\r\n      // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    );\r\n    render(\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>,\r\n      document.getElementById(\"root\")\r\n    );\r\n  }\r\n};\r\n\r\nconst script = document.createElement(\"script\");\r\nscript.src = \"web.js\";\r\nscript.async = true;\r\ndocument.body.appendChild(script);\r\n","module.exports = __webpack_public_path__ + \"static/media/logo-black.4a289cfe.png\";","module.exports = __webpack_public_path__ + \"static/media/favorite.39847071.png\";"],"sourceRoot":""}